"use strict";(self.webpackChunk_nyx_discord_docs=self.webpackChunk_nyx_discord_docs||[]).push([[2027],{4944:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var t=n(7458),i=n(6436);const o={title:"\ud83d\udce3 Session Event Bus"},d=void 0,c={id:"features/sessions/session-bus",title:"\ud83d\udce3 Session Event Bus",description:"The SessionEventBus emits session related events. It's stored by a ScheduleManager, and you can get it via",source:"@site/docs/features/sessions/session-bus.mdx",sourceDirName:"features/sessions",slug:"/features/sessions/session-bus",permalink:"/nyx/docs/features/sessions/session-bus",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/features/sessions/session-bus.mdx",tags:[],version:"current",frontMatter:{title:"\ud83d\udce3 Session Event Bus"},sidebar:"nyxSidebar",previous:{title:"\u231b Session Promise Repository",permalink:"/nyx/docs/features/sessions/session-promise-repository"},next:{title:"\ud83d\udcac Session CustomId Codec",permalink:"/nyx/docs/features/sessions/session-customid-codec"}},r={},a=[{value:"\ud83d\udc42 Events",id:"-events",level:2}];function u(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"SessionEventBus"})," emits session related events. It's stored by a ",(0,t.jsx)(s.code,{children:"ScheduleManager"}),", and you can get it via\n",(0,t.jsx)(s.code,{children:"SessionManager#getEventBus()"}),"."]}),"\n",(0,t.jsx)(s.admonition,{type:"tip",children:(0,t.jsxs)(s.p,{children:["You can check more information about buses on the ",(0,t.jsx)(s.a,{href:"../events/event-bus",children:"\ud83d\udce3 Event Buses"})," documentation."]})}),"\n",(0,t.jsx)(s.h2,{id:"-events",children:"\ud83d\udc42 Events"}),"\n",(0,t.jsx)(s.p,{children:"Currently, the events that it emits are:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionStart"})," - Emitted when a ",(0,t.jsx)(s.code,{children:"Session"})," starts. Passes the started ",(0,t.jsx)(s.code,{children:"Session"}),", its ",(0,t.jsx)(s.code,{children:"SessionStartInteraction"})," and\n",(0,t.jsx)(s.code,{children:"SessionExecutionMeta"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionUpdate"})," - Emitted when a ",(0,t.jsx)(s.code,{children:"Session"})," is updated. Passes the updated ",(0,t.jsx)(s.code,{children:"Session"}),", its ",(0,t.jsx)(s.code,{children:"SessionUpdateInteraction"}),"\nand ",(0,t.jsx)(s.code,{children:"SessionExecutionMeta"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionEnd"})," - Emitted when a ",(0,t.jsx)(s.code,{children:"Session"})," ends. Passes the ended ",(0,t.jsx)(s.code,{children:"Session"}),", its ",(0,t.jsx)(s.code,{children:"SessionEndData"})," and ",(0,t.jsx)(s.code,{children:"SessionExecutionMeta"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"SessionExpire"})," - Emitted when a ",(0,t.jsx)(s.code,{children:"Session"})," expires. Passes the expired ",(0,t.jsx)(s.code,{children:"Session"})," and ",(0,t.jsx)(s.code,{children:"SessionEndData"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["You can get these events from the ",(0,t.jsx)(s.code,{children:"SessionEventEnum"})," enum on ",(0,t.jsx)(s.code,{children:"@core"}),"."]})]})}function l(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},6436:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>d});var t=n(2983);const i={},o=t.createContext(i);function d(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);
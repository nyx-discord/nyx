"use strict";(self.webpackChunk_nyx_discord_docs=self.webpackChunk_nyx_discord_docs||[]).push([[9705],{5816:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>m,contentTitle:()=>p,default:()=>f,frontMatter:()=>u,metadata:()=>t,toc:()=>x});const t=JSON.parse('{"id":"features/sessions/session-overview","title":"\ud83d\udc64 Sessions","description":"Hey there \ud83d\udc4b!  This guide is here to give you a fast understanding of how nyx\'s session system works, so you can use it","source":"@site/docs/features/sessions/session-overview.mdx","sourceDirName":"features/sessions","slug":"/features/sessions/session-overview","permalink":"/nyx/docs/features/sessions/session-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/features/sessions/session-overview.mdx","tags":[],"version":"current","frontMatter":{"title":"\ud83d\udc64 Sessions"},"sidebar":"nyxSidebar","previous":{"title":"\ud83d\udce3 Schedule Event Bus","permalink":"/nyx/docs/features/schedules/schedule-bus"},"next":{"title":"\ufe0f\ud83d\udc64 Session","permalink":"/nyx/docs/features/sessions/types/session"}}');var o=s(3159),i=s(5912),r=s(5610),a=s(7598),d=(s(1855),s(8759));function c(){const e=[{id:"user",label:"\ud83e\uddd1 User",color:"#ff595e"},{id:"command",label:"\ud83d\udcbb Command",color:"#ff924c"},{id:"session",label:(0,o.jsxs)("p",{children:["\ud83d\udc64 ",(0,o.jsx)("code",{children:"Session"})]}),color:"#ffca3a"},{label:(0,o.jsxs)("p",{children:["\ud83d\udcbc ",(0,o.jsx)("a",{href:"./session-manager",children:(0,o.jsx)("code",{children:"SessionManager"})})]}),color:"#EF476F",id:"manager"},{label:(0,o.jsxs)("p",{children:["\ud83d\ude8c ",(0,o.jsx)("a",{href:"./session-repository",children:(0,o.jsx)("code",{children:"SessionRepository"})})]}),color:"#F78C6B",id:"repository"},{label:(0,o.jsxs)("p",{children:["\u26a1 ",(0,o.jsx)("a",{href:"./session-executor",children:(0,o.jsx)("code",{children:"SessionExecutor"})})]}),color:"#FFD166",id:"executor"},{label:(0,o.jsxs)("p",{children:["\ud83d\udc40 ",(0,o.jsx)("a",{href:"./session-middleware",children:(0,o.jsx)("code",{children:"SessionMiddleware"})})]}),color:"#FFD166",id:"middleware"},{label:(0,o.jsxs)("p",{children:["\ud83d\udcab ",(0,o.jsx)("a",{href:"../error/error-handling",children:(0,o.jsx)("code",{children:"ErrorHandler"})})]}),color:"#92162D",id:"errorHandler"}],n=[{from:"user",steps:[{to:"command",label:"Execute command",tooltip:"A session can technically start from any interaction (eg. buttons), but it's more common to start from a command call."},{to:"session",label:(0,o.jsx)("code",{children:"new Session(params)"}),offset:-2.5}]},{from:"command",to:"manager",label:(0,o.jsxs)("p",{children:[(0,o.jsx)("code",{children:"SessionManager#start(session)"})," or"," ",(0,o.jsx)("code",{children:"Session#start()"})]})},{from:"manager",to:"repository",label:(0,o.jsx)("code",{children:"SessionRepository #save(session)"}),offset:-2.5},{from:"manager",steps:[{to:"executor",label:(0,o.jsx)("code",{children:"SessionExecutor#start(session, metadata)"}),tooltip:(0,o.jsxs)("p",{children:["The ",(0,o.jsx)("code",{children:"metadata"})," is either user-provided or inferred from the interaction."]})},{to:"middleware",label:(0,o.jsx)("code",{children:"MiddlewareList #check(session, metadata)"}),offset:-15}]},{from:"middleware",to:"middleware",label:(0,o.jsxs)("p",{children:["Iterate middlewares' ",(0,o.jsx)("code",{children:"Middleware#check (session, metadata)"})]}),tooltip:"If there are registered middlewares",offset:-10},{from:"middleware",steps:[{to:"executor",label:"Return allowed or denied",tooltip:"Workflow ends if denied",offset:-1},{to:"session",label:(0,o.jsx)("code",{children:"Session#onStart(metadata)"})}]},{from:"executor",to:"errorHandler",label:"Pass thrown errors, if any",animated:!0},{from:"executor",to:"manager",label:"Finish execution",tooltip:(0,o.jsxs)("p",{children:["Emits ",(0,o.jsx)("code",{children:"SessionEventEnum.SessionStart"})]})}];return(0,d.$)({actors:e,events:n,height:"43vh",defaultViewport:{x:-80,y:-10,zoom:.412},id:"session-start"})}function l(){const e=[{id:"user",label:"\ud83e\uddd1 User",color:"#ff595e"},{id:"subscriber",label:"\ud83d\udc42 Subscriber",color:"#ff924c"},{label:(0,o.jsxs)("p",{children:["\ud83d\udcbc ",(0,o.jsx)("a",{href:"./session-manager",children:(0,o.jsx)("code",{children:"SessionManager"})})]}),color:"#EF476F",id:"manager"},{label:(0,o.jsxs)("p",{children:["\ud83d\udcac ",(0,o.jsx)("a",{href:"./session-customid-codec",children:(0,o.jsx)("code",{children:"SessionCustomIdCodec"})})]}),color:"#EF476F",id:"codec"},{id:"session",label:(0,o.jsxs)("p",{children:["\ud83d\udc64 ",(0,o.jsx)("code",{children:"Session"})]}),color:"#ffca3a"},{label:(0,o.jsxs)("p",{children:["\ud83d\ude8c ",(0,o.jsx)("a",{href:"./session-repository",children:(0,o.jsx)("code",{children:"SessionRepository"})})]}),color:"#F78C6B",id:"repository"},{label:(0,o.jsxs)("p",{children:["\u26a1 ",(0,o.jsx)("a",{href:"./session-executor",children:(0,o.jsx)("code",{children:"SessionExecutor"})})]}),color:"#FFD166",id:"executor"},{label:(0,o.jsxs)("p",{children:["\ud83d\udc40 ",(0,o.jsx)("a",{href:"./session-middleware",children:(0,o.jsx)("code",{children:"SessionMiddleware"})})]}),color:"#FFD166",id:"middleware"},{label:(0,o.jsxs)("p",{children:["\ud83d\udcab ",(0,o.jsx)("a",{href:"../error/error-handling",children:(0,o.jsx)("code",{children:"ErrorHandler"})})]}),color:"#92162D",id:"errorHandler"}],n=[{from:"user",steps:[{to:"subscriber",label:(0,o.jsxs)("p",{children:["Triggers ",(0,o.jsx)("code",{children:"interactionCreate"})]}),tooltip:(0,o.jsxs)("p",{children:["Through a component (eg. a button) whose ",(0,o.jsx)("code",{children:"customId"})," ","refers a ",(0,o.jsx)("code",{children:"Session"})]}),offset:-1.5},{to:"manager",label:(0,o.jsx)("p",{children:"Pass interaction"})},{to:"codec",label:(0,o.jsxs)("p",{children:["Extract session ID from ",(0,o.jsx)("code",{children:"customId"})]}),offset:-1.5,tooltip:(0,o.jsx)("code",{children:"CustomIdCodec#deserializeToObjectId(customId)"})},{to:"repository",label:"Get session by extracted ID",tooltip:"Workflow ends if session is not found."}]},{from:"manager",steps:[{to:"executor",label:(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:["Session found:"," ",(0,o.jsx)("code",{children:"SessionExecutor#update(session, interaction, metadata)"})]}),(0,o.jsxs)("li",{children:["Session not found, but ID was:"," ",(0,o.jsx)("code",{children:"SessionExecutor#handleMissing(id, interaction)"})]}),(0,o.jsx)("li",{children:"Otherwise end workflow"})]})},{to:"middleware",label:(0,o.jsx)("code",{children:"MiddlewareList #check(session, interaction, metadata)"}),offset:-28}]},{from:"middleware",to:"middleware",label:(0,o.jsxs)("p",{children:["Iterate middlewares' ",(0,o.jsx)("code",{children:"Middleware#check (session, metadata)"})]}),tooltip:"If there are registered middlewares",offset:-10},{from:"middleware",steps:[{to:"executor",label:"Return allowed or denied",tooltip:"Workflow ends if denied",offset:-1},{to:"session",label:(0,o.jsx)("code",{children:"Session#onUpdate(interaction, metadata)"})}]},{from:"executor",to:"errorHandler",label:"Pass thrown errors, if any",animated:!0},{from:"session",to:"executor",label:"Return whether TTL should be updated"},{from:"executor",to:"manager",label:"Pass TTL update decision"},{from:"manager",to:"repository",label:"Update TTL if requested",tooltip:(0,o.jsxs)("p",{children:["Regardless of TTL update, emits"," ",(0,o.jsx)("code",{children:"SessionEventEnum.SessionUpdate"})]})}];return(0,d.$)({actors:e,events:n,height:"40vh",defaultViewport:{x:-85,y:0,zoom:.358},id:"session-update"})}function h(){const e=[{label:(0,o.jsxs)("p",{children:["\ud83d\ude8c ",(0,o.jsx)("a",{href:"./session-repository",children:(0,o.jsx)("code",{children:"SessionRepository"})})]}),color:"#F78C6B",id:"repository"},{label:(0,o.jsxs)("p",{children:["\ud83d\udcbc ",(0,o.jsx)("a",{href:"./session-manager",children:(0,o.jsx)("code",{children:"SessionManager"})})]}),color:"#EF476F",id:"manager"},{label:(0,o.jsxs)("p",{children:["\u26a1 ",(0,o.jsx)("a",{href:"./session-executor",children:(0,o.jsx)("code",{children:"SessionExecutor"})})]}),color:"#FFD166",id:"executor"},{id:"session",label:(0,o.jsxs)("p",{children:["\ud83d\udc64 ",(0,o.jsx)("code",{children:"Session"})]}),color:"#ffca3a"},{label:(0,o.jsxs)("p",{children:["\u231b ",(0,o.jsx)("a",{href:"./session-promise-repository",children:(0,o.jsx)("code",{children:"Session Promise Repository"})})]}),color:"#92162D",id:"promise"}],n=[{from:"repository",to:"repository",label:"Remove expired session"},{from:"repository",to:"manager",label:"Notify session expiration"},{from:"manager",steps:[{to:"executor",label:(0,o.jsx)("code",{children:"SessionExecutor#end (session, ...data)"}),offset:-2.5},{to:"session",label:(0,o.jsx)("code",{children:"Session#onEnd (...data)"}),offset:-2.5}]},{from:"executor",to:"session",label:(0,o.jsx)("code",{children:"Session#getResult()"})},{from:"executor",to:"manager",label:(0,o.jsxs)("p",{children:["Return wrapped in ",(0,o.jsx)("code",{children:"SessionEndData"})]})},{from:"manager",to:"promise",label:(0,o.jsx)("code",{children:"SessionPromiseRepository#resolve(session, endData)"})},{from:"promise",to:"manager",label:"Finish execution",tooltip:(0,o.jsxs)("p",{children:["Emits ",(0,o.jsx)("code",{children:"SessionEventEnum.SessionExpire"})]})}];return(0,d.$)({actors:e,events:n,height:"50vh",id:"session-expiration"})}const u={title:"\ud83d\udc64 Sessions"},p=void 0,m={},x=[{value:"\ud83d\udcda Description",id:"-description",level:2},{value:"\ud83d\udd22 Session sequences",id:"-session-sequences",level:2},{value:"Start sequence",id:"start-sequence",level:4},{value:"Update sequence",id:"update-sequence",level:4},{value:"Expire sequence",id:"expire-sequence",level:4},{value:"\u2728 Quick Examples",id:"-quick-examples",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Hey there \ud83d\udc4b!  This guide is here to give you a fast understanding of how nyx's session system works, so you can use it\nright away. For in-depth details, see the respective guides of each session related object."}),"\n",(0,o.jsx)(n.h2,{id:"-description",children:"\ud83d\udcda Description"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"Sessions"}),' are objects that represent an open interaction session with a user on Discord. They can be used as an easy\nway to maintain a "conversation" with a user, and respond to interactions that the user makes to it.']}),"\n",(0,o.jsxs)(n.admonition,{type:"tip",children:[(0,o.jsx)(n.p,{children:"Some examples of sessions are:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A paginated embed that shows a user's moderations, allowing advanced options like filtering by type."}),"\n",(0,o.jsx)(n.li,{children:"An interactive embed that guides a user step by step to accomplish something, like creating a ticket category."}),"\n",(0,o.jsx)(n.li,{children:"A detailed settings embed that allows a user to change their server's settings with buttons, modals or select menus."}),"\n",(0,o.jsx)(n.li,{children:"In essence, any kind of situation where continuous interaction with a user is needed."}),"\n"]})]}),"\n",(0,o.jsxs)(n.p,{children:['Sessions can contain a "result", which is an internal object transmitted to objects that are waiting for the session\nto finish via a ',(0,o.jsx)(n.code,{children:"Promise"}),". This result can be used for even further interaction with the user once the session stops."]}),"\n",(0,o.jsxs)(n.p,{children:["The session system is made up of several objects that work together to track user interactions on sessions, sessions\nlifetime and serialization, all coordinated by a ",(0,o.jsx)(n.code,{children:"SessionManager"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Specifically, the session related objects are:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SessionManager"}),": The entry point for the session system, holding all the session-related objects and methods that use all of these objects. All objects below are contained here."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SessionCustomIdCodec"}),": De/serializes session ids to/from customId strings, to create session components. This component allows you to create and manipulate ",(0,o.jsx)(n.code,{children:"customIds"}),' programatically, with no "magic values".']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SessionRepository"}),": Temporarily stores sessions until their TTL is over, and notifies the manager when that happens."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SessionPromiseRepository"}),": Stores session promises that will be resolved once a given session ends."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SessionExecutor"}),": Executes sessions, checking its ",(0,o.jsx)(n.code,{children:"SessionMiddlewareList"})," and passing any errors to its ",(0,o.jsx)(n.code,{children:"ErrorHandler"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"SessionUpdateSubscriber"}),": An ",(0,o.jsx)(n.a,{href:"../events/event-subscriber",children:"\ud83d\udce9 Event Subscriber"})," that listens for interactions that can refer to sessions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"EventBus"}),": An ",(0,o.jsx)(n.a,{href:"../events/event-bus",children:"\ud83d\udce3 Event Bus"})," that emits session related events."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["There are three utility session types that derive from the main ",(0,o.jsx)(n.code,{children:"Session"})," interface:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"PaginationSession"}),': A session with "pages", like ',(0,o.jsx)(n.code,{children:"ListPaginationSession"})," or ",(0,o.jsx)(n.code,{children:"StagePaginationSession"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ListPaginationSession"})," Paginates a list of items, showing a given amount of them per page."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"StagePaginationSession"}),': Paginates through "stages", which act like nested sessions.']}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"-session-sequences",children:"\ud83d\udd22 Session sequences"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("summary",{children:"Session process overview"}),(0,o.jsx)(n.p,{children:"Session creation:"}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"A user triggers a session creation, typically via a command interaction."}),"\n",(0,o.jsxs)(n.li,{children:["The command creates the session and registers it to the ",(0,o.jsx)(n.code,{children:"SessionManager"}),". It can then ",(0,o.jsx)(n.code,{children:"await"})," for\n",(0,o.jsx)(n.code,{children:"Session#getEndPromise()"})," to wait for the session to end."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," saves the session on the repository, which will expire it later if needed."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," uses the ",(0,o.jsx)(n.code,{children:"SessionExecutor"})," to start the session."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionExecutor"})," checks its ",(0,o.jsx)(n.code,{children:"SessionStartMiddlewareList"})," which will allow or deny the start.\nThis includes checking the filter on ",(0,o.jsx)(n.code,{children:"Session#getStartFilter()"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["If the execution is allowed, the session is started, passing any errors to its ",(0,o.jsx)(n.code,{children:"SessionStartErrorHandler"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," uses the ",(0,o.jsx)(n.code,{children:"EventBus"})," to emit a ",(0,o.jsx)(n.code,{children:"SessionStart"})," event asynchronously, passing the session."]}),"\n"]}),(0,o.jsx)(n.p,{children:"Session update:"}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["When the user uses a session component, the ",(0,o.jsx)(n.code,{children:"SessionUpdateSubscriber"})," receives and passes it to the\n",(0,o.jsx)(n.code,{children:"SessionManager"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," uses the ",(0,o.jsx)(n.code,{children:"SessionCustomIdCodec"})," to check if the interaction refers to a session. If it does,\nit continues."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," gets the session from the ",(0,o.jsx)(n.code,{children:"SessionRepository"}),". If it doesn't exist, it calls\n",(0,o.jsx)(n.code,{children:"SessionExecutor#handleMissing()"}),", which will handle the interaction referring to a missing (probably expired)\nsession. If it does exist, it continues."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," calls ",(0,o.jsx)(n.code,{children:"SessionExecutor#update()"})," to handle the update, passing the interaction and session."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionExecutor"})," checks its ",(0,o.jsx)(n.code,{children:"SessionMiddlewareList"})," which will allow or deny the execution.\nThis includes checking the filter on ",(0,o.jsx)(n.code,{children:"Session#getUpdateFilter()"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["If the execution is allowed, the session is updated via ",(0,o.jsx)(n.code,{children:"Session#update()"}),", passing any errors to its\n",(0,o.jsx)(n.code,{children:"SessionUpdateErrorHandler"}),", and returning what ",(0,o.jsx)(n.code,{children:"Session#update()"})," returns."]}),"\n",(0,o.jsxs)(n.li,{children:["If the executor returns ",(0,o.jsx)(n.code,{children:"true"}),", the ",(0,o.jsx)(n.code,{children:"SessionManager"})," calls ",(0,o.jsx)(n.code,{children:"SessionRepository#setTTL()"})," to refresh the TTL of\nthe session."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," uses the ",(0,o.jsx)(n.code,{children:"EventBus"})," to emit a ",(0,o.jsx)(n.code,{children:"SessionUpdate"})," event asynchronously, passing the session,\ninteraction and meta."]}),"\n"]}),(0,o.jsx)(n.p,{children:"Session expiration:"}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Once a given session expires, the ",(0,o.jsx)(n.code,{children:"SessionRepository"})," removes it from its cache, and notifies the manager about it."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," creates a ",(0,o.jsx)(n.code,{children:"SessionEndData"})," with an ",(0,o.jsx)(n.code,{children:"Expired"})," origin and no result, which is passed to\n",(0,o.jsx)(n.code,{children:"SessionExecutor#end()"}),", alongside the session."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," calls ",(0,o.jsx)(n.code,{children:"SessionPromiseRepository#resolve()"}),", to resolve promises waiting for the session to\nend."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"SessionManager"})," uses the ",(0,o.jsx)(n.code,{children:"EventBus"})," to emit a ",(0,o.jsx)(n.code,{children:"SessionExpire"})," event asynchronously, passing the session and\nmeta."]}),"\n"]})]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A dashed step means it's executed asynchronously, so the next one is inmediately executed."}),"\n",(0,o.jsxs)(n.li,{children:["You can hover over steps with ",(0,o.jsx)(n.code,{children:"(?)"})," to see extra details."]}),"\n"]})}),"\n",(0,o.jsx)(n.h4,{id:"start-sequence",children:"Start sequence"}),"\n","\n",(0,o.jsx)(c,{}),"\n",(0,o.jsx)(n.h4,{id:"update-sequence",children:"Update sequence"}),"\n","\n",(0,o.jsx)(l,{}),"\n",(0,o.jsx)(n.h4,{id:"expire-sequence",children:"Expire sequence"}),"\n","\n",(0,o.jsx)(h,{}),"\n",(0,o.jsx)(n.h2,{id:"-quick-examples",children:"\u2728 Quick Examples"}),"\n",(0,o.jsxs)(r.A,{children:[(0,o.jsxs)(a.A,{value:"Simple session",children:[(0,o.jsxs)(n.p,{children:["A simple session just contains components that the user can interact with, for example, a select menu or a button. The\nsession will then reply to these interactions on ",(0,o.jsx)(n.code,{children:"Session#update()"}),"."]}),(0,o.jsxs)(n.p,{children:["For utility, the default ",(0,o.jsx)(n.code,{children:"Session#update()"})," routes to other methods depending on the interaction type (button, select\nmenu, or modal). You can of course override this method to your liking."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// A session with no result (void).\nclass MySession extends AbstractSession<void> {\n  public async start() {\n    const customIdBuilder = this.customId.clone();\n\n    /**\n     * The builder allows you to create customIds that will route to this session.\n     * The 'select' and 'button' parts are not needed for routing,\n     * but they're there to avoid duplicated customIds, which aren't allowed by Discord.\n     */\n\n    // Creating a select menu\n    const selectMenuId = customIdBuilder.push('select').build();\n    const mySelectMenu = new StringSelectMenuBuilder()\n      .setCustomId(selectMenuId)\n      .setPlaceholder('A select menu!')\n      .setMaxValues(1)\n      .addOptions([\n        {\n          label: 'Option 1',\n          value: 'option1',\n        },\n        {\n          label: 'Option 2',\n          value: 'option2',\n        },\n      ]);\n\n    // Creating a button\n    const buttonId = customIdBuilder.push('button').build();\n    const myButton = new ButtonBuilder()\n      .setCustomId(buttonId)\n      .setLabel('Click to open a modal!')\n      .setStyle(ButtonStyle.Primary);\n\n    // Wrapping and replying\n    const row = new ActionRowBuilder().addComponents(myButton, mySelectMenu);\n\n    await interaction.reply({\n      content: 'Select an option!',\n      components: [row],\n    });\n  }\n\n  /**\n   * Called when updating the session, and `Session#update()`\n   * has determined that it's a button interaction.\n   */\n  protected async handleButton(interaction: ButtonInteraction) {\n    const modalId = customIdBuilder.push('modal').build();\n    const myModal = new ModalBuilder()\n      .setCustomId(modalId)\n      .setTitle('My modal!')\n      .addComponents([\n        new ActionRowBuilder()\n          .addComponents([\n            new TextInputBuilder()\n              .setCustomId('name')\n              .setLabel('Your Name')\n              .setRequired(true)\n              .setStyle(TextInputStyle.Short)\n          ]),\n      ]);\n\n    await interaction.showModal(myModal);\n\n    // You can also get the extra 'button' token (or any added token) here.\n    const codec = this.bot.getSessionManager().getCustomIdCodec();\n    const iterator = codec.createIteratorFromCustomId(interaction.customId);\n    this.bot.getLogger().log(iterator.getTokens()); // ['button']\n  }\n\n  /**\n   * Called when updating the session, and `Session#update()`\n   * has determined that it's a select menu interaction.\n   */\n  protected async handleSelectMenu(interaction: AnySelectMenuInteraction) {\n    await interaction.reply('You selected: ' + interaction.values[0]);\n  }\n\n  /**\n   * Called when updating the session, and `Session#update()`\n   * has determined that it's a modal interaction.\n   */\n  protected async handleModal(interaction: ModalMessageModalSubmitInteraction) {\n    const name = interaction.fields.getTextInputValue('name');\n\n    await interaction.reply(`Your name is ${name}`);\n  }\n}\n\n// Somewhere in your code, like inside a command...\n\nconst sessionId = 'mySessionId'; // Ideally randomly generated\nconst session = new MySession(bot, sessionId, interaction);\nawait bot.getSessionManager().start(session);\n\n// `await` for the session to end\nawait session.getEndPromise();\n\nawait interaction.editReply('Session ended!');\n"})})]}),(0,o.jsxs)(a.A,{value:"Pagination session",children:[(0,o.jsxs)(n.p,{children:["A pagination session contains more options to accommodate page routing, like the ",(0,o.jsx)(n.code,{children:"PaginationCustomIdBuilder"}),". You can use\nthis builder to create page switch components. If you don't specify a page, it will be routed by default to the correspondent\nhandler (",(0,o.jsx)(n.code,{children:"#handleSelectMenu()"}),", ",(0,o.jsx)(n.code,{children:"#handleButton()"})," or ",(0,o.jsx)(n.code,{children:"#handleModal()"}),")."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"class MyPaginationSession extends AbstractPaginationSession<void> {\n  // Called when starting the session.\n  public async start() {\n    const page = this.createPage();\n\n    await this.startInteraction.reply(page);\n  }\n\n  /**\n  * Called when updating the session, and `Session#update()` has determined\n  * that it's an interaction asking for a page update.\n  *\n  * At this step, `this.currentPage` has already been updated.\n  */\n  protected async updatePage(interaction: SessionUpdateInteraction) {\n    /** Only let the user who started the session update the page. */\n    if (interaction.user.id !== this.startInteraction.user.id) {\n      await interaction.reply('You can\\'t do this!');\n\n      // \"Invalid\" interaction. Return `false` to not update the session's TTL.\n      return false;\n    }\n\n    const newPage = this.createPage();\n    await interaction.editReply(newPage);\n    return true;\n  }\n\n  protected createPage() {\n    const randomPage = Math.floor(Math.random() * 10);\n\n    /**\n    * Use this session's customIdBuilder to generate a customId\n    * that will route to this session.\n    */\n    const customIdBuilder = this.customId.clone();\n\n    /**\n    * PaginationSessions have a special `PaginationCustomIdBuilder`\n    * with page manipulation methods.\n    */\n    const customId = customIdBuilder.setPage(randomPage).build();\n\n    const button = new ButtonBuilder()\n      .setCustomId(customId)\n      .setLabel('Go to a random page!')\n      .setStyle(ButtonStyle.Primary);\n    const buttonRow = new ActionRowBuilder<ButtonBuilder>().addComponents(button);\n\n    /**\n    * Builds an ActionRow with some default \"Next page\"\n    * and \"Previous page\" buttons.\n    *\n    * Equivalent to the example above, but with page this.currentPage -+ 1\n    */\n    const pageRow = this.buildDefaultPageRow();\n\n    return {\n      content: `You're on page ${this.currentPage}`,\n      components: [buttonRow, pageRow]\n    };\n  }\n}\n\n// Somewhere in your code, like inside a command...\n\nconst sessionId = 'mySessionId'; // Ideally randomly generated\nconst session = new MyPaginationSession(bot, sessionId, interaction);\nawait bot.getSessionManager().start(session);\n\n// `await` for the session to end\nawait session.getEndPromise();\n\nawait interaction.editReply('Session ended!');\n"})}),(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsx)(n.p,{children:"Even though it may look verbose, this way you can:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Make any component that can route to any page index."}),"\n",(0,o.jsx)(n.li,{children:'Have complete control over your page components. No hardcoded "next" or "previous" buttons.'}),"\n",(0,o.jsx)(n.li,{children:"Create components that trigger other actions than just page navigation."}),"\n",(0,o.jsx)(n.li,{children:"Filter users out of the pagination, or even let anyone interact with it."}),"\n",(0,o.jsx)(n.li,{children:"Do more things even after the pagination has expired."}),"\n"]}),(0,o.jsx)(n.p,{children:"Of course, you can create your own abstract class with more logic to facilitate your own usage, if you don't need some\nof these liberties."})]})]}),(0,o.jsxs)(a.A,{value:"List pagination session",children:[(0,o.jsx)(n.p,{children:"A list pagination session is a special type of pagination session that paginates through a list of items."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// <number, void> specifies that it lists a number array and doesn't return anything.\nclass MyListPaginationSession extends AbstractListPaginationSession<number, void> {\n  // Called when starting the session.\n  public async start() {\n    const page = this.createPage();\n\n    await this.startInteraction.reply(page);\n  }\n\n  /**\n  * Called when updating the session, and `Session#update()` has determined\n  * that it's an interaction asking for a page update.\n  *\n  * At this step, `this.currentPage` has already been updated.\n  */\n  protected async updatePage(interaction: SessionUpdateInteraction) {\n    const page = this.createPage();\n\n    await interaction.editReply(page);\n  }\n\n  protected createPage() {\n    const currentNumbers = this.getCurrentPageElements();\n    const row = this.buildDefaultPageRow();\n\n    return {\n      content: `Current numbers: ${currentNumbers.join(', ')}`,\n      components: [row],\n    };\n  }\n}\n\n// Somewhere in your code, like inside a command...\n\nconst sessionItems = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst sessionId = 'mySessionId'; // Ideally randomly generated\nconst session = new MyListPaginationSession(bot, sessionId, interaction, sessionItems);\nawait bot.getSessionManager().start(session);\n\n// `await` for the session to end\nawait session.getEndPromise();\n\nawait interaction.editReply('Session ended!');\n"})})]}),(0,o.jsxs)(a.A,{value:"Stage pagination session",children:[(0,o.jsx)(n.p,{children:"A stage pagination session is a special type of pagination session that paginates through stages, like nested sessions."}),(0,o.jsx)(n.p,{children:"It has at least two stages:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["A ",(0,o.jsx)(n.code,{children:"SessionStartStage"}),", that will answer to the session start."]}),"\n",(0,o.jsxs)(n.li,{children:["Any number of ",(0,o.jsx)(n.code,{children:"SessionStages"}),", that will be switched to while the session is running."]}),"\n"]}),(0,o.jsxs)(n.p,{children:["Since a ",(0,o.jsx)(n.code,{children:"StagePaginationSession"})," doesn't contain any logic by itself, any customId not referring to a page will be interpreted\nas a customId referring the current stage."]}),(0,o.jsxs)(n.p,{children:["Note that ",(0,o.jsx)(n.code,{children:"StagePaginationSession#getCustomId()"})," already returns a cloned builder, no need to clone that one, but you should\nclone ",(0,o.jsx)(n.code,{children:"AbstractSessionStage#customId"}),". They are both equivalent actions."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"class MyStageSession extends AbstractStagePaginationSession<void> {\n  protected readonly stages = [\n    new Stage1(this),\n    new Stage2(this),\n  ] as const;\n}\n\nclass Stage1 extends AbstractSessionStartStage<void> {\n  // Called when the session starts with this as the first stage (SessionStartStages).\n  public async onStart(\n    interaction: SessionStartInteraction,\n  ): Promise<void> {\n    const nextPage = this.session.getCurrentPage() + 1;\n    const nextPageId = this.session.getCustomId().setPage(nextPage).build();\n    const pageButton = new ButtonBuilder()\n      .setStyle(1)\n      .setLabel('Next stage')\n      .setCustomId(nextPageId);\n\n    const pageRow = new ActionRowBuilder<ButtonBuilder>().addComponents(\n      pageButton,\n    );\n\n    const buttonId = this.customId.clone().push('button').build();\n    const button = new ButtonBuilder()\n      .setStyle(1)\n      .setLabel('Click me')\n      .setCustomId(buttonId);\n\n    const buttonRow = new ActionRowBuilder<ButtonBuilder>().addComponents(\n      button,\n    );\n\n    await interaction.reply({\n      components: [pageRow, buttonRow],\n      content: 'test',\n    });\n  }\n\n  // Called when the session switches to this stage.\n  public async onSwitch(\n    interaction: SessionUpdateInteraction,\n    _oldStage: SessionStage<unknown>,\n    _meta: SessionExecutionMeta,\n  ): Promise<boolean> {\n    const row = this.buildDefaultPageRow();\n\n    const buttonId = this.customId.push('test').build();\n    const button = new ButtonBuilder()\n      .setStyle(1)\n      .setLabel('test')\n      .setCustomId(buttonId);\n\n    const buttonRow = new ActionRowBuilder<ButtonBuilder>().addComponents(\n      button,\n    );\n\n    await interaction.update({\n      components: [row, buttonRow],\n      content: 'test switch',\n    });\n\n    return true;\n  }\n\n  /**\n   * Called when the session leaves this stage.\n   *\n   * While this method receives the interaction, it mustn't answer to it, as that\n   * will be done by the next stage.\n   */\n  public onLeave(\n    _interaction: SessionUpdateInteraction,\n    nextStage: SessionStage<unknown>,\n    _meta: SessionExecutionMeta\n  ) {\n    this.bot.getLogger().log('Left first stage. Went to: ', nextStage);\n  }\n\n  protected async handleButton(\n    interaction: ButtonInteraction,\n    _meta: SessionExecutionMeta,\n  ): Promise<boolean> {\n    await interaction.reply('Clicked!');\n\n    return true;\n  }\n}\n\nclass Stage2 extends AbstractSessionStage<void> {\n  public async onSwitch(\n    interaction: SessionUpdateInteraction,\n  ): Promise<boolean> {\n    const row = this.buildDefaultPageRow();\n\n    await interaction.update({\n      components: [row],\n      content: 'Second stage.',\n    });\n\n    return true;\n  }\n\n  public onLeave(): void {\n    this.bot.getLogger().log('Left second stage');\n  }\n}\n\n// Somewhere in your code, like inside a command...\n\nconst sessionId = 'mySessionId'; // Ideally randomly generated\nconst session = new MyStageSession(bot, sessionId, interaction);\nawait bot.getSessionManager().start(session);\n\n// `await` for the session to end\nawait session.getEndPromise();\n\nawait interaction.editReply('Session ended!');\n"})})]})]})]})}function f(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},8759:(e,n,s)=>{s.d(n,{$:()=>I});var t=s(2552),o=s(4415),i=(s(5023),s(1855)),r=s(6840);function a(e){return e+50}function d(e){return e-5}function c(e){return 1===e?120:120+90*(e-1)}function l(e){return e+270}function h(e){const n=u(e).length-15;return n>0?12*n:0}function u(e){if(null===e)return"";switch(typeof e){case"string":case"number":return e.toString();case"boolean":return"";case"object":return e instanceof Array?e.map(u).join(""):"props"in e?u(e.props.children):"";default:return console.warn("Unresolved `node` of type:",typeof e,e),""}}var p=s(3159);const m=(0,i.memo)((e=>{let{data:n}=e;const{label:s,width:i,height:a}=n,{colorMode:d}=(0,t.G)(),c=n.color??{},l="string"==typeof c?c:c[d];return(0,p.jsxs)("div",{className:"actor-node",children:[(0,p.jsx)(o.h7,{type:"source",position:r.yX.Left,id:"s-left"}),(0,p.jsx)(o.h7,{type:"source",position:r.yX.Right,id:"s-right"}),(0,p.jsx)("div",{className:"actor-node__body",style:{width:i??4,height:a??60,backgroundColor:l??("dark"===d?"#585858":"#BABABA")},children:s&&(0,p.jsx)("div",{className:"actor-node__label",style:{width:270+h(s)},children:s})}),(0,p.jsx)(o.h7,{type:"target",position:r.yX.Left,id:"t-left"}),(0,p.jsx)(o.h7,{type:"target",position:r.yX.Right,id:"t-right"})]})})),x="actorNode";function g(e){return`label-${e}`}function f(e,n){return`line-${e}-${n}`}function j(e,n,s){return`label-${e}-${n}-${s}`}function w(e){let{from:n,to:s,fromHandle:t,toHandle:o,animated:i}=e;return{id:`${n}-${s}`,source:n,sourceHandle:`s-${t}`,target:s,targetHandle:`t-${o}`,markerEnd:{type:r.TG.ArrowClosed},type:r.Do.SmoothStep,animated:i}}const y=(0,i.memo)((e=>{let{data:{label:n,width:s,tooltip:t}}=e;return(0,p.jsxs)("div",{className:"step-node",children:[t&&(0,p.jsxs)("div",{className:"step-node__tooltip",children:[(0,p.jsx)("svg",{className:"step-node__tooltip-icon",viewBox:"0 0 16 16",preserveAspectRatio:"X200Y200 meet",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",children:(0,p.jsx)("path",{d:"M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286m1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94"})}),(0,p.jsx)("span",{className:"step-node__tooltip-label",children:t})]}),(0,p.jsx)(o.h7,{type:"source",position:r.yX.Left,id:"s-left"}),(0,p.jsx)(o.h7,{type:"source",position:r.yX.Right,id:"s-right"}),(0,p.jsx)(o.h7,{type:"source",position:r.yX.Top,id:"s-top"}),(0,p.jsx)(o.h7,{type:"source",position:r.yX.Bottom,id:"s-bottom"}),(0,p.jsx)("div",{className:"step-node__label",style:{width:s??200},children:n}),(0,p.jsx)(o.h7,{type:"target",position:r.yX.Left,id:"t-left"}),(0,p.jsx)(o.h7,{type:"target",position:r.yX.Right,id:"t-right"}),(0,p.jsx)(o.h7,{type:"target",position:r.yX.Top,id:"t-top"}),(0,p.jsx)(o.h7,{type:"target",position:r.yX.Bottom,id:"t-bottom"})]})})),b="stepNode";function S(e,n){const s=[],t=Object.create(null);let o=0,i=0;for(const a of e){const e=l(i)+o;t[a.id]={...a,x:e},i=e,o=h(a.label)}let r=1;for(const[l,h]of n.entries()){const e=t[h.from];if(!e)throw new Error(`A sequence starts from: ${h.from}, but no such actor exists. Sequence: ${v(h)}`);const o="steps"in h?h.steps:[h],i=o.find((e=>e.to===h.from));if(i){if(o.length>1)throw new Error("A sequence with a self-referencing step cannot have more than one step.");r++;const t={id:j(r,e.id,e.id),position:{x:a(e.x),y:d(c(r))+(i.offset??0)},data:{label:i.label,tooltip:i.tooltip},type:b};s.push(t);const u=n[l-1];if(u){const e="steps"in u?{...u.steps[0],from:u.from}:u;if(e.from===h.from&&e.to===h.from)continue}const p={id:f(r-1,e.id),position:{x:e.x-1,y:c(r-1)},data:{color:e.color},type:x};s.push(p);continue}const m=n[l-1];if(m){const n="steps"in m?{...m.steps[0],from:m.from}:m;n.from===h.from&&n.to===h.from&&(r++,s.push({id:f(r,e.id),position:{x:e.x-1,y:c(r)},data:{color:e.color},type:x}),r++)}s.push({id:f(r,e.id),position:{x:e.x-1,y:c(r)},data:{color:e.color},type:x});let g=e;for(const n of o){const e=t[n.to];if(!e)throw new Error(`A sequence leads to: ${n.to}, but no such actor exists. Step: ${v(n)}`);const o=Math.min(e.x,g.x);s.push({id:j(r,g.id,e.id),position:{x:a(o),y:d(c(r))+(n.offset??0)},data:{label:n.label,width:(u=g.x,p=e.x,Math.abs(p-u)-100),tooltip:n.tooltip},type:b}),s.push({id:f(r,e.id),position:{x:e.x-1,y:c(r)},data:{color:e.color},type:x}),g=e}r++}var u,p;const m=c(r-1)+90-50;var w;for(const a of e){const e=t[a.id].x,n={id:(w=a.id,`actorLine-${w}`),position:{x:e,y:50},data:{height:m,width:2},type:x},o={id:g(a.id),position:{x:e-2,y:50},data:{color:a.color,label:a.label,width:6,height:50},type:x};s.unshift(n,o)}return s}function v(e){const n=[];return JSON.stringify(e,(function(e,s){if(null!=s&&"object"==typeof s){if(n.indexOf(s)>=0)return;n.push(s)}return s}))}const I=e=>{const n=S(e.actors,e.events),s=function(e,n){const s=[];let t=1;for(const[o,i]of n.entries()){const r="steps"in i?i.steps:[i];if(0===r.length)throw new Error(`No steps in sequence: ${JSON.stringify(i)}`);let a=i.from;for(const[d,c]of r.entries()){if(i.from===c.to){const e=n[o-1];if(e){const n="steps"in e?{...e.steps[0],from:e.from}:e;if(n.from===n.to&&n.to===i.from){const e=w({from:j(t-1,c.to,c.to),to:j(t,c.to,c.to),fromHandle:"bottom",toHandle:"top",animated:c.animated});s.push(e);continue}}const r=w({from:f(t,a),to:j(t+1,a,c.to),fromHandle:"right",toHandle:"top",animated:c.animated});s.push(r),t++;continue}{const e=n[o-1];if(e&&0===d){const n="steps"in e?{...e.steps[0],from:e.from}:e;if(n.from===n.to){const e=w({from:j(t-1,n.to,n.to),to:f(t,n.to),fromHandle:"bottom",toHandle:"right",animated:n.animated});t++,s.push(e)}}}const r=f(t,a),l=f(t,c.to),h=j(t,a,c.to),u=e.findIndex((e=>e.id===a)),p=e.findIndex((e=>e.id===c.to))>u,m=w({from:r,to:h,fromHandle:p?"right":"left",toHandle:p?"left":"right",animated:c.animated}),x=w({from:h,to:l,fromHandle:p?"right":"left",toHandle:p?"left":"right",animated:c.animated});s.push(m,x),a=c.to}t++}return s}(e.actors,e.events);e.beforeNodes&&n.unshift(...e.beforeNodes),e.afterNodes&&n.push(...e.afterNodes);const{colorMode:r}=(0,t.G)(),a=(0,i.useMemo)((()=>({[b]:y,[x]:m})),[n,s]);return(0,p.jsx)("div",{style:{height:e.height??"60vh"},children:(0,p.jsxs)(o.Gc,{id:e.id,className:"sequence-diagram",nodes:n,edges:s,colorMode:r,edgesReconnectable:!1,elementsSelectable:!1,nodesDraggable:!1,onNodeMouseEnter:(e,n)=>n.data.isHovering=!0,onNodeMouseLeave:(e,n)=>n.data.isHovering=!1,nodeTypes:a,minZoom:0,fitView:void 0===e.defaultViewport,defaultViewport:e.defaultViewport,children:[(0,p.jsx)(o.VS,{id:e.id,className:"sequence-diagram__background",variant:o._5.Dots,size:1,bgColor:"dark"===r?"#212121":"#f6f8fa"}),(0,p.jsx)(o.H2,{className:"sequence-diagram__controls",fitViewOptions:{duration:200},showInteractive:!1})]})})}}}]);
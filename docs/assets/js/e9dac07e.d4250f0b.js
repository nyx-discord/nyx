"use strict";(self.webpackChunk_nyx_discord_docs=self.webpackChunk_nyx_discord_docs||[]).push([[5652],{5129:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>u});var t=s(7458),i=s(6436),o=s(9021),r=s(2543);const a={title:"\ufe0f\ud83d\udc64 Session"},l=void 0,d={id:"features/sessions/types/session",title:"\ufe0f\ud83d\udc64 Session",description:"A Session is an object that holds the state of an interaction session.",source:"@site/docs/features/sessions/types/session.mdx",sourceDirName:"features/sessions/types",slug:"/features/sessions/types/session",permalink:"/nyx/docs/features/sessions/types/session",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/features/sessions/types/session.mdx",tags:[],version:"current",frontMatter:{title:"\ufe0f\ud83d\udc64 Session"},sidebar:"nyxSidebar",previous:{title:"\ud83d\udc64 Sessions",permalink:"/nyx/docs/features/sessions/session-overview"},next:{title:"\ud83d\udd22 Pagination Session",permalink:"/nyx/docs/features/sessions/types/pagination-session"}},c={},u=[{value:"\ud83d\udc77 Creation",id:"-creation",level:2},{value:"\ud83d\udcdd Updating",id:"-updating",level:2},{value:"\ud83d\udcac Custom Ids",id:"-custom-ids",level:2},{value:"\u2728 Component Examples",id:"-component-examples",level:3},{value:"\ud83c\udfc6 Result",id:"-result",level:2},{value:"\u231b Session TTL",id:"-session-ttl",level:2},{value:"\ud83d\udea7 Filters",id:"-filters",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Session"})," is an object that holds the state of an interaction session."]}),"\n",(0,t.jsx)(n.p,{children:"The workflow of a session goes like this:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The session is instantiated by some object when an interaction is received."}),"\n",(0,t.jsxs)(n.li,{children:["It's passed to ",(0,t.jsx)(n.code,{children:"SessionManager#start()"}),". This ultimately starts the session via ",(0,t.jsx)(n.code,{children:"Session#start()"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The session replies to its ",(0,t.jsx)(n.code,{children:"SessionStartInteraction"}),", with components that route back to the session."]}),"\n",(0,t.jsxs)(n.li,{children:["The user uses one of these components. The bot receives it, sends it to the ",(0,t.jsx)(n.code,{children:"SessionManager"}),", and it's ultimately\nrouted to ",(0,t.jsx)(n.code,{children:"Session#update()"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"The session is updated, replying to that new interaction, and the cycle repeats."}),"\n",(0,t.jsxs)(n.li,{children:["Eventually the session ends or expires, calling ",(0,t.jsx)(n.code,{children:"Session#end()"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The result is extracted via ",(0,t.jsx)(n.code,{children:"Session#getResult()"}),", which is used to ",(0,t.jsx)(n.a,{href:"../session-bus",children:"emit the event"}),", and to\n",(0,t.jsx)(n.a,{href:"../session-promise-repository",children:"resolve the end promise"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["To avoid issues, it's recommended that the object that instantiates the session doesn't reply to the interaction.\nInstead, that should be done by the session itself (on ",(0,t.jsx)(n.code,{children:"Session#start()"}),")."]})}),"\n",(0,t.jsx)(n.h2,{id:"-creation",children:"\ud83d\udc77 Creation"}),"\n",(0,t.jsx)(n.p,{children:"You can create a session by either:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Extending ",(0,t.jsx)(n.code,{children:"AbstractSession"})," from ",(0,t.jsx)(n.code,{children:"@framework"})," (recommended)."]}),"\n",(0,t.jsxs)(n.li,{children:["Implementing the ",(0,t.jsx)(n.code,{children:"Session"})," interface from ",(0,t.jsx)(n.code,{children:"@core"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["After creating it, start it via ",(0,t.jsx)(n.code,{children:"SessionManager#start()"}),"."]}),"\n",(0,t.jsxs)(o.Z,{children:[(0,t.jsx)(r.Z,{value:"Extending AbstractSession",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { AbstractSession, SessionUpdateInteraction } from '@nyx-discord/framework';\n\nclass MySession extends AbstractSession {\n  public async start() {\n    const buttonId = this.customId.clonePush('button').build();\n\n    const updateButton = new ButtonBuilder()\n      .setCustomId(buttonId)\n      .setLabel('Update')\n      .setStyle(ButtonStyle.Primary);\n\n    await this.startInteraction.reply('Hello!');\n  }\n\n  public async end() {\n    const reply = await this.startInteraction.fetchReply();\n    await reply.edit('Goodbye!');\n  }\n\n  protected async handleButton(interaction: SessionUpdateInteraction) {\n    await interaction.reply('Hello again!');\n  }\n}\n\n// Somewhere in your code, like inside a command...\n\nconst sessionId = 'mySessionId'; // Ideally randomly generated\nconst session = new MySession(bot, sessionId, interaction);\nawait botgetSessionManager().start(session);\n"})})}),(0,t.jsx)(r.Z,{value:"Implementing Session",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { Session } from '@nyx-discord/core';\n\nclass MySession implements Session {\n  // ...\n}\n\nconst session = new MySession(/** ... */);\nawait botgetSessionManager().start(session);\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"-updating",children:"\ud83d\udcdd Updating"}),"\n",(0,t.jsxs)(n.p,{children:['A session is "updated" when an interaction whose ',(0,t.jsx)(n.code,{children:"customId"})," property refers to the session is received. The session\nis then updated via ",(0,t.jsx)(n.code,{children:"Session#update()"}),", and it's responsible for answering to that interaction."]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["When extending ",(0,t.jsx)(n.code,{children:"AbstractSession"})," you don't need to implement ",(0,t.jsx)(n.code,{children:"Session#update()"}),". By default, it redirects interactions\ndepending on its type:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"#handleButton()"})," for ",(0,t.jsx)(n.code,{children:"ButtonInteractions"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"#handleSelectMenu()"})," for ",(0,t.jsx)(n.code,{children:"AnySelectMenuInteractions"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"#handleModal()"})," for ",(0,t.jsx)(n.code,{children:"ModalMessageModalSubmitInteraction"}),"."]}),"\n"]}),(0,t.jsx)(n.p,{children:"Override these instead, depending on what components you are sending."})]}),"\n",(0,t.jsxs)(n.p,{children:["When the session is updated, ",(0,t.jsx)(n.code,{children:"Session#update()"})," (or each handle method) must return whether the session's TTL has to be\nrefreshed or not."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Returning ",(0,t.jsx)(n.code,{children:"true"})," on every update refreshes the session's TTL when updated, while returning always ",(0,t.jsx)(n.code,{children:"false"}),' makes the\nTTL to never refresh, like a "timed race" session.']})}),"\n",(0,t.jsx)(n.h2,{id:"-custom-ids",children:"\ud83d\udcac Custom Ids"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"SessionCustomIdCodec"}),' is the object responsible for generating and validating customIds that refer to a session,\ncalled "Session Custom Ids".']}),"\n",(0,t.jsxs)(n.p,{children:["Additionally, it can generate a ",(0,t.jsx)(n.code,{children:"CustomIdBuilder"}),", which you can use to append extra tokens to your customId. When\nreceiving it, you can use the codec again to extract the extra tokens using a ",(0,t.jsx)(n.code,{children:"StringIterator"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const codec = botgetSessionManager().getCustomIdCodec();\n\n// Creating a simple customId.\nconst simpleCustomId = codec.deserializeToObjectId(session);\n\n// Creating a customId builder.\nconst builder = codec.createCustomIdBuilder(session);\nbuilder.push('foo').push('bar');\n\n// warn-next-line\n// Throws an error if the result has more than 100 characters.\nconst tokenCustomId = builder.build();\n\n// Extracting the extra tokens.\nconst iterator = codec.createIteratorFromCustomId(tokenCustomId);\niterator.getTokens(); // ['foo', 'bar']\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:['To avoid "magic values" where you guess the order of the tokens, you can use ',(0,t.jsx)(n.code,{children:"CustomIdBuilder#setAt(index, value)"}),". You\ncan then use ",(0,t.jsx)(n.code,{children:"StringIterator#getAt(index)"})," to get the value, saving the index as a constant somewhere."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["For utility purposes, ",(0,t.jsx)(n.code,{children:"AbstractSession"})," saves its own customId in a ",(0,t.jsx)(n.code,{children:"AbstractSession#customId"})," property. However, make\nsure to ",(0,t.jsx)(n.strong,{children:"always clone it before appending values to it"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Discord doesn't allow duplicated customIds on a single message, even if they come from different component types.\nYou can push values like ",(0,t.jsx)(n.code,{children:"'button'"}),", ",(0,t.jsx)(n.code,{children:"'select'"}),", ",(0,t.jsx)(n.code,{children:"'modal'"})," to avoid that issue."]}),"\n"]}),"\n"]})}),"\n",(0,t.jsx)(n.h3,{id:"-component-examples",children:"\u2728 Component Examples"}),"\n",(0,t.jsxs)(o.Z,{children:[(0,t.jsx)(r.Z,{value:"Button",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const buttonId = builder.clonePush('button').build();\n\nconst button = new ButtonBuilder()\n  // highlight-next-line\n  .setCustomId(buttonId)\n  .setLabel('A session button')\n  .setStyle(ButtonStyle.Primary);\n"})})}),(0,t.jsxs)(r.Z,{value:"Select Menu",children:[(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"CustomIdCodec"})," only uses the customId from the select menu itself, not their options."]})}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const selectId = builder.clonePush('select').build();\n\nconst select = new SelectMenuBuilder()\n  // highlight-next-line\n  .setCustomId(selectId)\n  .setPlaceholder('A session select menu')\n  .addOptions([\n    new StringSelectMenuOptionBuilder()\n      .setLabel('Option 1')\n      .setValue('option1'),\n    new StringSelectMenuOptionBuilder()\n      .setLabel('Option 2')\n      .setValue('option2'),\n  ]);\n"})})]}),(0,t.jsx)(r.Z,{value:"Modal",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const modalId = builder.clonePush('modal').build();\n\nconst modal = new ModalBuilder()\n  // highlight-next-line\n  .setCustomId(modalId)\n  .setTitle('A session modal')\n  .addComponents([\n    new TextInputBuilder()\n      .setCustomId('textInput')\n      .setLabel('Text input')\n      .setStyle(TextInputStyle.Short),\n  ]);\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"-result",children:"\ud83c\udfc6 Result"}),"\n",(0,t.jsxs)(n.p,{children:['A session can provide a "result", the type of which is defined by the session\'s generic argument. When the session ends,\nthe result obtained via ',(0,t.jsx)(n.code,{children:"Session#getResult()"})," is used to ",(0,t.jsx)(n.a,{href:"../session-bus",children:"emit the event"}),", and to\n",(0,t.jsx)(n.a,{href:"../session-promise-repository",children:"resolve the end promise"}),"."]}),"\n",(0,t.jsx)(n.p,{children:'Use the result to make sessions that "aggregate" some input data from the user, which can then be used in other code.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"class MySession extends AbstractSession<number> {\n  // ...\n\n  public end() {\n    this.result = 1;\n  }\n}\n\n// Somewhere in your code, like inside a command...\n\nconst sessionId = 'mySessionId'; // Ideally randomly generated\nconst session = new MySession(bot, sessionId, interaction);\nawait botgetSessionManager().start(session);\n\nconst endData = await session.getEndPromise();\nendData.result; // 1\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-session-ttl",children:"\u231b Session TTL"}),"\n",(0,t.jsxs)(n.p,{children:["Once a session starts, it has a given TTL until it expires. When the session is updated, ",(0,t.jsx)(n.code,{children:"Session#update()"})," returns\nwhether the TTL has to be refreshed or not."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Returning ",(0,t.jsx)(n.code,{children:"true"})," on every update refreshes the session's TTL when updated, while returning always ",(0,t.jsx)(n.code,{children:"false"}),' makes the\nTTL to never refresh, like a "timed race" session.']})}),"\n",(0,t.jsx)(n.p,{children:"You can specify a TTL:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Overriding ",(0,t.jsx)(n.code,{children:"ttl"})," when extending ",(0,t.jsx)(n.code,{children:"AbstractSession"})," from ",(0,t.jsx)(n.code,{children:"@framework"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Returning it on ",(0,t.jsx)(n.code,{children:"Session#getTTL()"})," when implementing ",(0,t.jsx)(n.code,{children:"Session"})," from ",(0,t.jsx)(n.code,{children:"@core"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-filters",children:"\ud83d\udea7 Filters"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"SessionFilter"})," is an object that can be used to filter out session starts (",(0,t.jsx)(n.code,{children:"SessionStartFilter"}),")\nor updates (",(0,t.jsx)(n.code,{children:"SessionUpdateFilter"}),"). They are provided by the session, via ",(0,t.jsx)(n.code,{children:"Session#getStartFilter()"})," and\n",(0,t.jsx)(n.code,{children:"Session#getUpdateFilter()"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"To add a filter to your session, first create the filter:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Extending ",(0,t.jsx)(n.code,{children:"AbstractSessionStartFilter"})," or ",(0,t.jsx)(n.code,{children:"AbstractSessionUpdateFilter"})," from ",(0,t.jsx)(n.code,{children:"@framework"})," (recommended)."]}),"\n",(0,t.jsxs)(n.li,{children:["Implementing the ",(0,t.jsx)(n.code,{children:"SessionStartFilter"})," or ",(0,t.jsx)(n.code,{children:"SessionUpdateFilter"})," interface from ",(0,t.jsx)(n.code,{children:"@core"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"After creating it, add it to your session class:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Overriding ",(0,t.jsx)(n.code,{children:"startFilter"})," or ",(0,t.jsx)(n.code,{children:"updateFilter"})," when extending ",(0,t.jsx)(n.code,{children:"AbstractSession"})," from ",(0,t.jsx)(n.code,{children:"@framework"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Returning it on ",(0,t.jsx)(n.code,{children:"Session#getStartFilter()"})," or ",(0,t.jsx)(n.code,{children:"Session#getUpdateFilter()"})," when implementing ",(0,t.jsx)(n.code,{children:"Session"})," from ",(0,t.jsx)(n.code,{children:"@core"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["For more information on filters, check the ",(0,t.jsx)(n.a,{href:"../session-interception",children:"\ud83d\udee1\ufe0f Session Interception"})," documentation."]})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},2543:(e,n,s)=>{s.d(n,{Z:()=>r});s(2983);var t=s(8934);const i={tabItem:"tabItem_FK4c"};var o=s(7458);function r(e){let{children:n,hidden:s,className:r}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,t.Z)(i.tabItem,r),hidden:s,children:n})}},9021:(e,n,s)=>{s.d(n,{Z:()=>S});var t=s(2983),i=s(8934),o=s(6776),r=s(3729),a=s(3668),l=s(8866),d=s(5504),c=s(591);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:i}}=e;return{value:n,label:s,attributes:t,default:i}}))}(s);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:s}=e;const i=(0,r.k6)(),o=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,l._X)(o),(0,t.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(i.location.search);n.set(o,e),i.replace({...i.location,search:n.toString()})}),[o,i])]}function m(e){const{defaultValue:n,queryString:s=!1,groupId:i}=e,o=h(e),[r,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:o}))),[d,u]=x({queryString:s,groupId:i}),[m,j]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,o]=(0,c.Nk)(s);return[i,(0,t.useCallback)((e=>{s&&o.set(e)}),[s,o])]}({groupId:i}),f=(()=>{const e=d??m;return p({value:e,tabValues:o})?e:null})();(0,a.Z)((()=>{f&&l(f)}),[f]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),j(e)}),[u,j,o]),tabValues:o}}var j=s(1678);const f={tabList:"tabList_dumu",tabItem:"tabItem_hRcV"};var g=s(7458);function b(e){let{className:n,block:s,selectedValue:t,selectValue:r,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),c=e=>{const n=e.currentTarget,s=l.indexOf(n),i=a[s].value;i!==t&&(d(n),r(i))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},n),children:a.map((e=>{let{value:n,label:s,attributes:o}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:u,onClick:c,...o,className:(0,i.Z)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":t===n}),children:s??n},n)}))})}function y(e){let{lazy:n,children:s,selectedValue:i}=e;const o=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=m(e);return(0,g.jsxs)("div",{className:(0,i.Z)("tabs-container",f.tabList),children:[(0,g.jsx)(b,{...e,...n}),(0,g.jsx)(y,{...e,...n})]})}function S(e){const n=(0,j.Z)();return(0,g.jsx)(v,{...e,children:u(e.children)},String(n))}},6436:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>r});var t=s(2983);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);
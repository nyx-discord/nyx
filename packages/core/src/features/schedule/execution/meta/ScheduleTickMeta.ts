import { Collection } from '@discordjs/collection';

import type { NyxBot } from '../../../../bot/NyxBot.js';
import type { Identifiable } from '../../../../identity/Identifiable.js';
import type { Identifier } from '../../../../identity/Identifier.js';
import type { MetaCollection } from '../../../../meta/MetaCollection.js';
import type { Schedule } from '../../schedule/Schedule.js';

/** An object that saves metadata about a schedule tick. */
export class ScheduleTickMeta
  extends Collection<Identifier, unknown>
  implements MetaCollection, Identifiable
{
  protected readonly id: Identifier;

  protected readonly bot: NyxBot;

  protected readonly createdAt: number = Date.now();

  constructor(bot: NyxBot, id: Identifier) {
    super();
    this.bot = bot;
    this.id = id;
  }

  /** Creates an ScheduleTickMeta using the given arguments, and an autogenerated ID. */
  public static fromSchedule(
    schedule: Schedule,
    bot: NyxBot,
  ): ScheduleTickMeta {
    const scheduleId = String(schedule.getId());
    const id = Symbol(`Schedule '${scheduleId}' @${Date.now()}`);
    return new ScheduleTickMeta(bot, id);
  }

  /** Returns the bot that called this schedule. */
  public getBot(): NyxBot {
    return this.bot;
  }

  /** Returns the identifier of this schedule tick. */
  public getId(): Identifier {
    return this.id;
  }

  /** Returns the time when this schedule was ticked. */
  public getCreatedAt(): number {
    return this.createdAt;
  }
}

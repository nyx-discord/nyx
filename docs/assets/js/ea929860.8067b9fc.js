"use strict";(self.webpackChunk_nyx_discord_docs=self.webpackChunk_nyx_discord_docs||[]).push([[5161],{2949:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"features/commands/command-customid-codec","title":"\ud83d\udcac Command CustomId Codec","description":"The CommandCustomIdCodec is the object responsible for encoding and decoding command custom ids. That is, custom ids","source":"@site/docs/features/commands/command-customid-codec.mdx","sourceDirName":"features/commands","slug":"/features/commands/command-customid-codec","permalink":"/nyx/docs/features/commands/command-customid-codec","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/features/commands/command-customid-codec.mdx","tags":[],"version":"current","frontMatter":{"title":"\ud83d\udcac Command CustomId Codec"},"sidebar":"nyxSidebar","previous":{"title":"\ufe0f\ud83d\udcbc Command Manager","permalink":"/nyx/docs/features/commands/command-manager"},"next":{"title":"\u26a1 Command Executor","permalink":"/nyx/docs/features/commands/command-executor"}}');var a=t(3159),r=t(5912),s=t(5610),d=t(7598);const c={title:"\ud83d\udcac Command CustomId Codec"},i=void 0,m={},l=[{value:"\u2728 Examples",id:"-examples",level:2},{value:"\ud83d\udea7 Usage examples",id:"-usage-examples",level:3},{value:"\u2705 Implementation examples",id:"-implementation-examples",level:3},{value:"\ud83d\udc77 Creation",id:"-creation",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"CommandCustomIdCodec"})," is the object responsible for encoding and decoding command custom ids. That is, custom ids\nthat refer to commands. With this object you can easily create components that will trigger commands when\nthey are used. It's stored by a ",(0,a.jsx)(n.code,{children:"CommandManager"}),", and you can get it via ",(0,a.jsx)(n.code,{children:"CommandManager#getCustomIdCodec()"}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsxs)(n.p,{children:["It's advised that you only use this API for simple user actions. If you're looking for something more complex,\nyou should use a dedicated handler or the ",(0,a.jsx)(n.a,{href:"./../sessions/session-overview",children:"\ud83d\udc64 Sessions API"}),"."]})}),"\n",(0,a.jsx)(n.h2,{id:"-examples",children:"\u2728 Examples"}),"\n",(0,a.jsx)(n.h3,{id:"-usage-examples",children:"\ud83d\udea7 Usage examples"}),"\n",(0,a.jsx)(n.p,{children:'These are short examples on how the API is used overall. For "real world" examples, read the next section.'}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(d.A,{value:"Referring to a command",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Get the command instance\nconst myCommand = commandManager.getRepository().locateByTree(MyCommandClass);\nif (!myCommand) throw new Error('Command not found');\n\n// Get the customId\nconst customIdCodec = commandManager.getCustomIdCodec();\nconst customId = customIdCodec.serializeToCustomId(myCommand);\n"})})}),(0,a.jsxs)(d.A,{value:"Referring with extra data",children:[(0,a.jsx)(n.p,{children:"Building your custom ID:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Get the command instance\nconst myCommand = commandManager.getRepository().locateByTree(MyCommandClass);\nif (!myCommand) throw new Error('Command not found');\n\n// Get the customId builder\nconst customIdCodec = commandManager.getCustomIdCodec();\nconst customIdBuilder = customIdCodec.createCustomIdBuilder(myCommand);\n\n// Append extra data and build\nconst customId = customIdBuilder.setAt(0, 'Extra data').build();\n"})}),(0,a.jsxs)(n.p,{children:["Receiving and extracting the extra data from an ",(0,a.jsx)(n.code,{children:"Interaction"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Build a StringIterator to extract the extra data\nconst iterator = customIdCodec.createIteratorFromCustomId(interaction.customId);\n\n// Get at index 0, true to throw an error if not present\nconst extraData = iterator.getAt(0, true);\nbot.getLogger().log(extraData); // 'Extra data'\n"})})]})]}),"\n",(0,a.jsx)(n.h3,{id:"-implementation-examples",children:"\u2705 Implementation examples"}),"\n",(0,a.jsx)(n.p,{children:'These are "real world" examples on how the API can be used. For "short", concrete examples, read the last section.'}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(d.A,{value:"Referring to a command",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Assume this command is registered\nclass PingCommand extends AbstractStandaloneCommand {\n  public async handleInteraction(interaction: ComponentCommandInteraction) {\n    await interaction.reply('Pong!');\n  }\n}\n\nclass MyReferralCommand extends AbstractStandaloneCommand {\n  public async execute(\n    interaction: ChatInputCommandInteraction,\n    metadata: CommandExecutionMeta,\n  ) {\n    const bot = metadata.getBot();\n    const commandManager = bot.getCommandManager();\n\n    // Get the command instance\n    const pingCommand = commandManager.getRepository().locateByTree(PingCommand);\n    if (!pingCommand) throw new Error('Ping command not found');\n\n    // highlight-start\n    // Get the customId\n    const customIdCodec = bot.getCommandManager().getCustomIdCodec();\n    const customId = customIdCodec.serializeToCustomId(pingCommand);\n    // highlight-end\n\n    // Create your component\n\n    const button = new ButtonBuilder()\n      // highlight-start\n      // When this button is clicked, it will trigger PingCommand#handleInteraction()\n      .setCustomId(customId)\n      // highlight-end\n      .setLabel('Click to check your ping!')\n      .setStyle(ButtonStyle.Primary);\n\n    const row = new ActionRowBuilder().addComponents(button);\n    await interaction.reply({ components: [row] });\n  }\n}\n"})})}),(0,a.jsx)(d.A,{value:"Referring with extra data",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const UserIdIndex = 0;\n\nclass AdminListCommand extends AbstractStandaloneCommand {\n  public async execute(\n    interaction: ChatInputCommandInteraction,\n    metadata: CommandExecutionMeta,\n  ) {\n    const bot = metadata.getBot();\n    const commandManager = bot.getCommandManager();\n\n    // Get the command instance\n    const userInfoCommand = commandManager.getRepository().locateByTree(UserInfoCommand);\n    if (!userInfoCommand) throw new Error('User info command not found');\n\n    // Get the customId builder\n    const customIdCodec = bot.getCommandManager().getCustomIdCodec();\n    const customIdBuilder = customIdCodec.createCustomIdBuilder(userInfoCommand);\n\n    // Create customIds by cloning the builder, adding the ID and building\n    const adminACustomId = customIdBuilder\n      .clone()\n      .setAt(UserIdIndex, '1234567890')\n      .build();\n    const adminBCustomId = customIdBuilder\n      .clone()\n      .setAt(UserIdIndex, '0123456789')\n      .build();\n\n    // Create the buttons\n    const adminAButton = new ButtonBuilder()\n      .setCustomId(adminACustomId)\n      .setLabel('Admin A')\n      .setStyle(ButtonStyle.Primary);\n\n    const adminBButton = new ButtonBuilder()\n      .setCustomId(adminBCustomId)\n      .setLabel('Admin B')\n      .setStyle(ButtonStyle.Primary);\n\n    const row = new ActionRowBuilder().addComponents(adminAButton, adminBButton);\n\n    await interaction.reply({ components: [row] });\n  }\n}\n\nclass UserInfoCommand extends AbstractStandaloneCommand {\n  public async handleInteraction(\n    interaction: ComponentCommandInteraction,\n    metadata: CommandExecutionMeta,\n  ) {\n    const bot = metadata.getBot();\n    const customIdCodec = bot.getCommandManager().getCustomIdCodec();\n\n    // Build a StringIterator to extract the extra data\n    const iterator = customIdCodec.createIteratorFromCustomId(interaction.customId);\n\n    // Get at UserIdIndex index, true to throw an error if not present\n    const userId = iterator.getAt(UserIdIndex, true);\n\n    const user = await bot.client.users.fetch(userId);\n    await interaction.reply(`User: ${user.tag}`);\n  }\n}\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"-creation",children:"\ud83d\udc77 Creation"}),"\n",(0,a.jsx)(n.p,{children:"You can create a command custom ID codec by either:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Extending ",(0,a.jsx)(n.code,{children:"DefaultCommandCustomIdCodec"})," from ",(0,a.jsx)(n.code,{children:"@framework"})," (recommended)."]}),"\n",(0,a.jsxs)(n.li,{children:["Implementing the ",(0,a.jsx)(n.code,{children:"CommandCustomIdCodec"})," interface from ",(0,a.jsx)(n.code,{children:"@core"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(d.A,{value:"Extending DefaultCommandCustomIdCodec",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"class MyCommandCustomIdCodec extends DefaultCommandCustomIdCodec {\n  // ...\n}\n\nconst myCodec = new MyCommandCustomIdCodec();\n\nconst myBot = Bot.create((bot) => ({\n  commands: DefaultCommandManager.create(bot, client, clientBus, { customIdCodec: myCodec }),\n}));\n"})})}),(0,a.jsx)(d.A,{value:"Implementing CommandCustomIdCodec",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"class MyCommandCustomIdCodec implements CommandCustomIdCodec {\n  // ...\n}\n\nconst myCodec = new MyCommandCustomIdCodec();\n\nconst myBot = Bot.create((bot) => ({\n  commands: DefaultCommandManager.create(bot, client, clientBus, { customIdCodec: myCodec }),\n}));\n"})})})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},7598:(e,n,t)=>{t.d(n,{A:()=>s});t(1855);var o=t(1271);const a={tabItem:"tabItem_Jk6b"};var r=t(3159);function s(e){let{children:n,hidden:t,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,o.A)(a.tabItem,s),hidden:t,children:n})}},5610:(e,n,t)=>{t.d(n,{A:()=>v});var o=t(1855),a=t(1271),r=t(4303),s=t(3178),d=t(3782),c=t(7520),i=t(9665),m=t(9575);function l(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return l(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:a}}=e;return{value:n,label:t,attributes:o,default:a}}))}(t);return function(e){const n=(0,i.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function C(e){let{queryString:n=!1,groupId:t}=e;const a=(0,s.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=u(e),[s,c]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:r}))),[i,l]=C({queryString:t,groupId:a}),[p,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,m.Dv)(t);return[a,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),x=(()=>{const e=i??p;return h({value:e,tabValues:r})?e:null})();(0,d.A)((()=>{x&&c(x)}),[x]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),l(e),g(e)}),[l,g,r]),tabValues:r}}var g=t(1342);const x={tabList:"tabList_Pkq_",tabItem:"tabItem_JbFz"};var I=t(3159);function f(e){let{className:n,block:t,selectedValue:o,selectValue:s,tabValues:d}=e;const c=[],{blockElementScrollPositionUntilNextRender:i}=(0,r.a_)(),m=e=>{const n=e.currentTarget,t=c.indexOf(n),a=d[t].value;a!==o&&(i(n),s(a))},l=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,I.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:d.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,I.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>c.push(e),onKeyDown:l,onClick:m,...r,className:(0,a.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,I.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=p(e);return(0,I.jsxs)("div",{className:(0,a.A)("tabs-container",x.tabList),children:[(0,I.jsx)(f,{...n,...e}),(0,I.jsx)(b,{...n,...e})]})}function v(e){const n=(0,g.A)();return(0,I.jsx)(y,{...e,children:l(e.children)},String(n))}},5912:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var o=t(1855);const a={},r=o.createContext(a);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);
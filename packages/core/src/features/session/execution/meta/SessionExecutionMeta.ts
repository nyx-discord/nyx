import { Collection } from '@discordjs/collection';
import type { Identifiable } from '../../../../identity/Identifiable.js';
import type { Identifier } from '../../../../identity/Identifier.js';
import type { MetaCollection } from '../../../../meta/MetaCollection.js';
import type { Session } from '../../session/Session.js';

/** An object that saves metadata about a session execution. */
export class SessionExecutionMeta
  extends Collection<Identifier, unknown>
  implements MetaCollection, Identifiable
{
  protected readonly id: Identifier;

  protected readonly createdAt: number = Date.now();

  constructor(id: Identifier) {
    super();
    this.id = id;
  }

  /** Creates a SessionExecutionMeta using the given arguments, and an autogenerated ID. */
  public static fromSession(session: Session<unknown>): SessionExecutionMeta {
    const sessionId = session.getId();
    const id = Symbol(`Session-${sessionId} @${Date.now()}`);

    return new SessionExecutionMeta(id);
  }

  /** Returns the identifier of this session execution. */
  public getId(): Identifier {
    return this.id;
  }

  /** Returns the time when this session was executed. */
  public getCreatedAt(): number {
    return this.createdAt;
  }
}

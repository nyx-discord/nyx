"use strict";(self.webpackChunk_nyx_discord_docs=self.webpackChunk_nyx_discord_docs||[]).push([[1990],{617:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>h,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>b});const s=JSON.parse('{"id":"features/events/event-overview","title":"\ud83d\udcf8 Events","description":"Hey there \ud83d\udc4b!  This guide is here to give you a fast understanding of how nyx\'s event system works, so you can use it","source":"@site/docs/features/events/event-overview.mdx","sourceDirName":"features/events","slug":"/features/events/event-overview","permalink":"/nyx/docs/features/events/event-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/features/events/event-overview.mdx","tags":[],"version":"current","frontMatter":{"title":"\ud83d\udcf8 Events"},"sidebar":"nyxSidebar","previous":{"title":"\ud83d\ude80 Start","permalink":"/nyx/docs/start"},"next":{"title":"\ufe0f\ud83d\udee1\ufe0f Event Interception","permalink":"/nyx/docs/features/events/event-interception"}}');var r=n(3159),i=n(5912),o=n(5610),c=n(7598),a=(n(1855),n(8759));function d(){const e=[{label:"\ud83d\udc64 Object",color:"#ff595e",id:"object"},{label:(0,r.jsxs)("p",{children:["\ud83d\ude8c ",(0,r.jsx)("a",{href:"./event-bus",children:(0,r.jsx)("code",{children:"EventBus"})})]}),color:"#ff924c",id:"bus"},{label:(0,r.jsxs)("p",{children:["\u26a1 ",(0,r.jsx)("a",{href:"./event-dispatcher",children:(0,r.jsx)("code",{children:"EventDispatcher"})})]}),color:"#ffca3a",id:"dispatcher"},{label:(0,r.jsxs)("p",{children:["\ufe0f\ud83d\udee1\ufe0f  ",(0,r.jsx)("a",{href:"./event-interception#-event-middlewares",children:(0,r.jsx)("code",{children:"MiddlewareList"})})]}),color:"#8ac926",id:"middlewareList"},{label:(0,r.jsxs)("p",{children:["\ud83d\udc42 ",(0,r.jsx)("a",{href:"./event-subscriber",children:(0,r.jsx)("code",{children:"EventSubscriber"})})]}),color:{dark:"#1982c4",light:"#038866"},id:"subscriber"},{label:(0,r.jsxs)("p",{children:["\ud83d\udcab ",(0,r.jsx)("a",{href:"../error/error-handling",children:(0,r.jsx)("code",{children:"ErrorHandler"})})]}),color:"#92162D",id:"errorHandler"}];return(0,a.$)({actors:e,events:[{from:"object",to:"bus",label:"Emit event",animated:!0},{from:"bus",to:"bus",label:"Get subscribers for event"},{from:"bus",steps:[{to:"dispatcher",label:"Pass subscribers and args"},{to:"middlewareList",label:"Check middleware list",tooltip:"Only if there are middlewares registered"}]},{from:"middlewareList",to:"middlewareList",label:"Check all registered middlewares"},{from:"middlewareList",to:"dispatcher",label:"Return allowed or denied",tooltip:"Workflow ends if denied"},{from:"dispatcher",to:"subscriber",label:"Notify subscriber"},{from:"dispatcher",to:"errorHandler",label:"Pass thrown errors, if any",tooltip:"Workflow ends if it errored",animated:!0},{from:"dispatcher",to:"bus",label:"Finish execution"}],id:"event-overview",height:"65vh",beforeNodes:[{type:"group",id:"group",position:{x:790,y:440},data:{},style:{width:980,height:670}}],afterNodes:[{id:"group-label",position:{x:1490,y:440},data:{label:"For each subscriber"},style:{fontSize:27,width:"auto",border:"none",textShadow:"var(--ifm-color-emphasis-100) 1px 0 10px",fontFamily:"Segoe TV, sans-serif",backgroundColor:"transparent"}}],defaultViewport:{x:-100,y:-20,zoom:.53}})}const l={title:"\ud83d\udcf8 Events"},h="\ud83d\udcf8 Events",u={},b=[{value:"\ud83d\udcda Description",id:"-description",level:2},{value:"\ud83d\udd22 Event call sequence",id:"-event-call-sequence",level:2},{value:"\u2728 Quick examples",id:"-quick-examples",level:2},{value:"\ud83d\udc42 Subscribing to an event",id:"-subscribing-to-an-event",level:2},{value:"\ud83e\udd16 Subscribing to the Client",id:"-subscribing-to-the-client",level:3},{value:"\ud83d\ude8c Creating an event bus",id:"-creating-an-event-bus",level:2},{value:"\ud83d\udce6 Event Type Safety",id:"-event-type-safety",level:2}];function m(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"-events",children:"\ud83d\udcf8 Events"})}),"\n","\n",(0,r.jsx)(t.p,{children:"Hey there \ud83d\udc4b!  This guide is here to give you a fast understanding of how nyx's event system works, so you can use it\nright away. For in-depth details, see the respective guides of each event related object."}),"\n",(0,r.jsx)(t.h2,{id:"-description",children:"\ud83d\udcda Description"}),"\n",(0,r.jsxs)(t.p,{children:["The event system in nyx is powered by ",(0,r.jsx)(t.code,{children:"EventBuses"}),". These are objects that store and notify their subscribers when an\nevent is called either internally or from another source."]}),"\n",(0,r.jsx)(t.p,{children:"Specifically, the event related objects are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"EventManager"}),": The entry point for the event system, holding all the event-related objects and methods that use all\nof these objects."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"EventBuses"}),": Store and notify their subscribers when an event happens, using its ",(0,r.jsx)(t.code,{children:"EventDispatcher"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"EventDispatcher"}),": Stored by a bus, dispatches an event to the subscribers its passed, checking its\n",(0,r.jsx)(t.code,{children:"SubscriberMiddlewareList"})," and passing any errors to its ",(0,r.jsx)(t.code,{children:"ErrorHandler"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"EventSubscribers"}),": Objects that subscribe to an event emitted by an ",(0,r.jsx)(t.code,{children:"EventBus"}),"."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"-event-call-sequence",children:"\ud83d\udd22 Event call sequence"}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"A dashed step means it's executed asynchronously, so the next one is inmediately executed."}),"\n",(0,r.jsxs)(t.li,{children:["You can hover over steps with ",(0,r.jsx)(t.code,{children:"(?)"})," to see extra details."]}),"\n"]})}),"\n","\n",(0,r.jsx)(d,{}),"\n",(0,r.jsx)(t.h2,{id:"-quick-examples",children:"\u2728 Quick examples"}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"Imports are omitted on these examples for simplicity."})}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsxs)(c.A,{value:"Listening to interactionCreate",children:[(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Extend ",(0,r.jsx)(t.code,{children:"AbstractDJSClientSubscriber"}),", implementing ",(0,r.jsx)(t.code,{children:"handleEvent()"})," and ",(0,r.jsx)(t.code,{children:"event"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:["Register it to a bot's ",(0,r.jsx)(t.code,{children:"EventManager"}),"."]}),"\n"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"class InteractionCreateSubscriber\n  extends AbstractDJSClientSubscriber<Events.InteractionCreate> {\n  protected readonly event = Events.InteractionCreate;\n\n  public handleEvent(\n    meta: EventDispatchMeta,\n    interaction: Interaction,\n  ): void {\n    const bot = meta.getBot(true);\n\n    bot.getLogger().info(`Interaction ${interaction.id} received.`);\n  }\n}\n\nconst subscriber = new InteractionCreateSubscriber();\nawait bot.getEventManager().subscribeClient(subscriber);\n"})})]}),(0,r.jsxs)(c.A,{value:"Making an EventBus",children:[(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Instantiate a bus with either ",(0,r.jsx)(t.code,{children:"BasicEventBus#createAsync()"})," or ",(0,r.jsx)(t.code,{children:"BasicEventBus#createSync()"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:["Register it to a bot's ",(0,r.jsx)(t.code,{children:"EventManager"}),"."]}),"\n"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"// Or BasicEventBus#createSync()\nconst myBus = BasicEventBus.createAsync(\n bot,\n Symbol('myBus'), // Bus ID\n);\n\nawait bot.getEventManager().addEventBus(myBus);\n"})})]}),(0,r.jsxs)(c.A,{value:"Listening to command runs",children:[(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["Extend ",(0,r.jsx)(t.code,{children:"AbstractEventSubscriber"}),", implementing ",(0,r.jsx)(t.code,{children:"handleEvent()"})," and ",(0,r.jsx)(t.code,{children:"event"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:["Register it to a bot's ",(0,r.jsx)(t.code,{children:"CommandManager"})," event bus."]}),"\n"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"class CommandCallSubscriber\n  extends AbstractEventSubscriber<CommandEventArgs, typeof CommandEventEnum.CommandRun> {\n  protected readonly event = CommandEventEnum.CommandRun;\n\n  // All of these arguments are safely typed\n  public handleEvent(\n    meta: EventDispatchMeta,\n    command: ExecutableCommand<CommandData>,\n    interaction: CommandExecutableInteraction,\n    commandMeta: CommandExecutionMeta,\n  ) {\n  const bot = commandMeta.getBot(true);\n\n  bot.getLogger().info(`Command '${command.getData().name}' called.`);\n  }\n}\n\nawait bot.getCommandManager().getEventBus().subscribe(subscriber);\n"})})]})]}),"\n",(0,r.jsx)(t.h2,{id:"-subscribing-to-an-event",children:"\ud83d\udc42 Subscribing to an event"}),"\n",(0,r.jsxs)(t.p,{children:["To subscribe to an event you first need an ",(0,r.jsx)(t.code,{children:"EventSubscriber"})," object."]}),"\n",(0,r.jsx)(t.p,{children:"You can create these by either:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Extending ",(0,r.jsx)(t.code,{children:"AbstractEventSubscriber"})," from ",(0,r.jsx)(t.code,{children:"@framework"})," (recommended)."]}),"\n",(0,r.jsxs)(t.li,{children:["Instantiating a ",(0,r.jsx)(t.code,{children:"SubscriberCallbackWrapper"})," from ",(0,r.jsx)(t.code,{children:"@framework"}),", passing a callback function."]}),"\n",(0,r.jsxs)(t.li,{children:["Implementing the ",(0,r.jsx)(t.code,{children:"EventSubscriber"})," interface from ",(0,r.jsx)(t.code,{children:"@core"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["After creating it, you finish by subscribing it to the bus that you want with ",(0,r.jsx)(t.code,{children:"EventBus#subscribe()"}),"."]}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(c.A,{value:"Extending AbstractEventSubscriber",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { AbstractEventSubscriber } from '@nyx-discord/framework';\nimport type { EventDispatchMeta } from '@nyx-discord/core';\n\nclass MyEventSubscriber extends AbstractEventSubscriber<MyEventsArgs, 'someEvent'> {\n  protected readonly event = 'someEvent';\n\n  public handleEvent(meta: EventDispatchMeta, ...args: MyEventsArgs['someEvent']) {\n    // Null if you didn't pass a bot while creating your bus\n    const bot = meta.getBot();\n    if (!bot) {\n      console.log('Hello world');\n      return;\n    }\n\n    bot.getLogger().log('Hello world');\n  }\n}\n\nconst frameworkSubscriber = new MyEventSubscriber();\n\nawait myBus.subscribe(frameworkSubscriber);\n"})})}),(0,r.jsx)(c.A,{value:"Instantiating SubscriberCallbackWrapper",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { SubscriberCallbackWrapper } from '@nyx-discord/framework';\n\nconst callbackSubscriber = new SubscriberCallbackWrapper < MyEventsArgs, 'someEvent'>(\n  'someEvent',\n  (meta: EventDispatchMeta, ...args: MyEventsArgs['someEvent']) => {\n    // Null if you didn't pass a bot while creating your bus\n    const bot = meta.getBot();\n    if (!bot) {\n      console.log('Hello world');\n      return;\n    }\n\n    bot.getLogger().log('Hello world');\n  }\n);\n\nawait myBus.subscribe(callbackSubscriber);\n"})})}),(0,r.jsx)(c.A,{value:"Implementing EventSubscriber",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { EventSubscriber } from '@nyx-discord/core';\n\nclass MyInterfaceEventSubscriber implements EventSubscriber {\n  // ...\n}\n\nconst interfaceSubscriber = new MyInterfaceEventSubscriber();\n\nawait myBus.subscribe(interfaceSubscriber);\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"-subscribing-to-the-client",children:"\ud83e\udd16 Subscribing to the Client"}),"\n",(0,r.jsxs)(t.p,{children:["A common operation is to subscribe to the Discord.js Client to listen to client events. To do so, you need an\n",(0,r.jsx)(t.code,{children:"EventSubscriber"})," that receives any of discord.js' ",(0,r.jsx)(t.code,{children:"ClientEvents"})," as arguments, then just register said subscriber to\nthe manager's client event bus."]}),"\n",(0,r.jsxs)(t.p,{children:["There's a utility class on ",(0,r.jsx)(t.code,{children:"@nyx-discord/framework"})," for a Client subscriber, the ",(0,r.jsx)(t.code,{children:"AbstractDJSClientSubscriber"}),". It\nreceives the handled event as a generic, where you can use the discord.js ",(0,r.jsx)(t.code,{children:"Event"})," enum. This value is used to safely\ntype the arguments of the event handler."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { Events } from 'discord.js';\nimport type { Interaction } from 'discord.js';\n\nimport { AbstractDJSClientSubscriber } from '@nyx-discord/framework';\nimport type { EventDispatchMeta } from '@nyx-discord/core';\n\nclass InteractionCreateSubscriber\n  extends AbstractDJSClientSubscriber<Events.InteractionCreate> {\n  protected override readonly event = Events.InteractionCreate;\n\n  public handleEvent(meta: EventDispatchMeta, interaction: Interaction) {\n    const bot = meta.getBot(true);\n\n    bot.getLogger().info(`Interaction ${interaction.id} received.`);\n  }\n}\n\nconst subscriber = new InteractionCreateSubscriber();\nawait bot.getEventManager().subscribeClient(subscriber);\n"})}),"\n",(0,r.jsx)(t.h2,{id:"-creating-an-event-bus",children:"\ud83d\ude8c Creating an event bus"}),"\n",(0,r.jsx)(t.p,{children:"You can create your own event buses by either:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Instantiating an",(0,r.jsx)(t.code,{children:"BasicEventBus"})," from",(0,r.jsx)(t.code,{children:"@framework"}),"(recommended)."]}),"\n",(0,r.jsxs)(t.li,{children:["Implementing the",(0,r.jsx)(t.code,{children:"EventBus"})," interface from",(0,r.jsx)(t.code,{children:"@core"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.admonition,{type:"note",children:[(0,r.jsxs)(t.p,{children:["There are two options to instantiate a default ",(0,r.jsx)(t.code,{children:"BasicEventBus"}),"."]}),(0,r.jsx)(t.p,{children:"Either with:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"BasicEventBus#createAsync()"})," which uses an",(0,r.jsx)(t.code,{children:"AsyncEventDispatcher"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"BasicEventBus#createSync()"})," which uses an",(0,r.jsx)(t.code,{children:"SyncEventDispatcher"}),"."]}),"\n"]}),(0,r.jsx)(t.p,{children:"In"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["An",(0,r.jsx)(t.code,{children:"AsyncEventDispatcher"})," executes multiple subscribers at a time, on a fixed amount."]}),"\n",(0,r.jsxs)(t.li,{children:["An",(0,r.jsx)(t.code,{children:"SyncEventDispatcher"})," executes one subscriber at a time, with a fixed execution time until it passes to\nthe next."]}),"\n"]}),(0,r.jsxs)(t.p,{children:["It's advised that you check the ",(0,r.jsx)(t.a,{href:"./event-dispatcher",children:"\u26a1 Event Dispatcher"})," documentation for more information."]})]}),"\n",(0,r.jsxs)(t.p,{children:["After creating it, you finish by registering it with ",(0,r.jsx)(t.code,{children:"EventManager#addEventBus()"}),"."]}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(c.A,{value:"Instantiating BasicEventBus",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { BasicEventBus } from '@nyx-discord/framework';\n\n// Uses an AsyncEventDispatcher\nconst asyncBus = BasicEventBus.createAsync(\n  bot,\n  Symbol('myAsyncBus'), // Bus ID\n);\n\n// Uses a SyncEventDispatcher\nconst syncBus = BasicEventBus.createSync(\n  bot,\n  Symbol('mySyncBus'), // Bus ID\n);\n\nawait bot.getEventManager()\n  .addEventBus(asyncBus)\n  .addEventBus(syncBus);\n"})})}),(0,r.jsx)(c.A,{value:"Implementing EventBus",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { EventBus } from '@nyx-discord/core';\n\nclass MyInterfaceEventBus implements EventBus {\n  // ...\n}\n\nconst interfaceBus = new MyInterfaceEventBus();\n\nawait bot.getEventManager().addEventBus(interfaceBus);\n"})})})]}),"\n",(0,r.jsx)(t.h2,{id:"-event-type-safety",children:"\ud83d\udce6 Event Type Safety"}),"\n",(0,r.jsxs)(t.p,{children:["To ensure type safety when emitting events, event buses take a generic type of ",(0,r.jsx)(t.code,{children:"Record<string, unknown[]>"}),", that\nrepresents the events that the bus emits, and their arguments."]}),"\n",(0,r.jsxs)(t.p,{children:["A typed event bus will also cause a type error when trying to add a ",(0,r.jsx)(t.code,{children:"EventSubscriber"})," whose arguments don't match any\nevent that the bus emits."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { BasicEventBus } from '@nyx-discord/framework';\n\ninterface TicketEventsArgs {\n  ticketCreate: [ticket: Ticket],\n  ticketClose: [closedTicket: Ticket, closer: TicketUser],\n}\n\nconst ticketBus = BasicEventBus.createAsync<TicketEventsArgs>(\n  bot,\n  Symbol('TicketEventBus'),\n);\n\nconst createdTicket: Ticket = {};\nconst closedTicket: Ticket = {};\nconst closerUser: TicketUser = {};\n\nawait ticketBus.emit('ticketCreate', [createdTicket]);\nawait ticketBus.emit('ticketClose', [closedTicket, closerUser]);\n\n// error-start\nawait ticketBus.emit('ticketCreate', ['Ticket']);\nawait ticketBus.emit('ticketClose', [ticketUser]);\nawait ticketBus.emit('ticketClose', []);\n// error-end\n\nconst validSubscriber = new SubscriberCallbackWrapper<TicketEventsArgs, 'ticketCreate'>(\n  'ticketCreate',\n  (meta: EventDispatchMeta, createdTicket: Ticket) => {\n    // Do something\n  }\n);\n\nconst invalidSubscriber = new SubscriberCallbackWrapper<TicketEventsArgs, 'ticketCreate'>(\n  'ticketCreate',\n  // Errors since TicketEventsArgs['ticketCreate'] doesn't match [number]\n  // error-next-line\n  (meta: EventDispatchMeta, createdTicket: number) => {\n    // Do something\n  }\n);\n\nticketBus\n  .subscribe(validSubscriber)\n    // Errors since [number] doesn't match any event argument on TicketEventsArgs\n  // error-next-line\n  .subscribe(invalidSubscriber);\n"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},8759:(e,t,n)=>{n.d(t,{$:()=>k});var s=n(2552),r=n(4415),i=(n(5023),n(1855)),o=n(6840);function c(e){return e+50}function a(e){return e-5}function d(e){return 1===e?120:120+90*(e-1)}function l(e){return e+270}function h(e){const t=u(e).length-15;return t>0?12*t:0}function u(e){if(null===e)return"";switch(typeof e){case"string":case"number":return e.toString();case"boolean":return"";case"object":return e instanceof Array?e.map(u).join(""):"props"in e?u(e.props.children):"";default:return console.warn("Unresolved `node` of type:",typeof e,e),""}}var b=n(3159);const m=(0,i.memo)((e=>{let{data:t}=e;const{label:n,width:i,height:c}=t,{colorMode:a}=(0,s.G)(),d=t.color??{},l="string"==typeof d?d:d[a];return(0,b.jsxs)("div",{className:"actor-node",children:[(0,b.jsx)(r.h7,{type:"source",position:o.yX.Left,id:"s-left"}),(0,b.jsx)(r.h7,{type:"source",position:o.yX.Right,id:"s-right"}),(0,b.jsx)("div",{className:"actor-node__body",style:{width:i??4,height:c??60,backgroundColor:l??("dark"===a?"#585858":"#BABABA")},children:n&&(0,b.jsx)("div",{className:"actor-node__label",style:{width:270+h(n)},children:n})}),(0,b.jsx)(r.h7,{type:"target",position:o.yX.Left,id:"t-left"}),(0,b.jsx)(r.h7,{type:"target",position:o.yX.Right,id:"t-right"})]})})),p="actorNode";function v(e){return`label-${e}`}function x(e,t){return`line-${e}-${t}`}function f(e,t,n){return`label-${e}-${t}-${n}`}function g(e){let{from:t,to:n,fromHandle:s,toHandle:r,animated:i}=e;return{id:`${t}-${n}`,source:t,sourceHandle:`s-${s}`,target:n,targetHandle:`t-${r}`,markerEnd:{type:o.TG.ArrowClosed},type:o.Do.SmoothStep,animated:i}}const j=(0,i.memo)((e=>{let{data:{label:t,width:n,tooltip:s}}=e;return(0,b.jsxs)("div",{className:"step-node",children:[s&&(0,b.jsxs)("div",{className:"step-node__tooltip",children:[(0,b.jsx)("svg",{className:"step-node__tooltip-icon",viewBox:"0 0 16 16",preserveAspectRatio:"X200Y200 meet",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",children:(0,b.jsx)("path",{d:"M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286m1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94"})}),(0,b.jsx)("span",{className:"step-node__tooltip-label",children:s})]}),(0,b.jsx)(r.h7,{type:"source",position:o.yX.Left,id:"s-left"}),(0,b.jsx)(r.h7,{type:"source",position:o.yX.Right,id:"s-right"}),(0,b.jsx)(r.h7,{type:"source",position:o.yX.Top,id:"s-top"}),(0,b.jsx)(r.h7,{type:"source",position:o.yX.Bottom,id:"s-bottom"}),(0,b.jsx)("div",{className:"step-node__label",style:{width:n??200},children:t}),(0,b.jsx)(r.h7,{type:"target",position:o.yX.Left,id:"t-left"}),(0,b.jsx)(r.h7,{type:"target",position:o.yX.Right,id:"t-right"}),(0,b.jsx)(r.h7,{type:"target",position:o.yX.Top,id:"t-top"}),(0,b.jsx)(r.h7,{type:"target",position:o.yX.Bottom,id:"t-bottom"})]})})),y="stepNode";function E(e,t){const n=[],s=Object.create(null);let r=0,i=0;for(const c of e){const e=l(i)+r;s[c.id]={...c,x:e},i=e,r=h(c.label)}let o=1;for(const[l,h]of t.entries()){const e=s[h.from];if(!e)throw new Error(`A sequence starts from: ${h.from}, but no such actor exists. Sequence: ${w(h)}`);const r="steps"in h?h.steps:[h],i=r.find((e=>e.to===h.from));if(i){if(r.length>1)throw new Error("A sequence with a self-referencing step cannot have more than one step.");o++;const s={id:f(o,e.id,e.id),position:{x:c(e.x),y:a(d(o))+(i.offset??0)},data:{label:i.label,tooltip:i.tooltip},type:y};n.push(s);const u=t[l-1];if(u){const e="steps"in u?{...u.steps[0],from:u.from}:u;if(e.from===h.from&&e.to===h.from)continue}const b={id:x(o-1,e.id),position:{x:e.x-1,y:d(o-1)},data:{color:e.color},type:p};n.push(b);continue}const m=t[l-1];if(m){const t="steps"in m?{...m.steps[0],from:m.from}:m;t.from===h.from&&t.to===h.from&&(o++,n.push({id:x(o,e.id),position:{x:e.x-1,y:d(o)},data:{color:e.color},type:p}),o++)}n.push({id:x(o,e.id),position:{x:e.x-1,y:d(o)},data:{color:e.color},type:p});let v=e;for(const t of r){const e=s[t.to];if(!e)throw new Error(`A sequence leads to: ${t.to}, but no such actor exists. Step: ${w(t)}`);const r=Math.min(e.x,v.x);n.push({id:f(o,v.id,e.id),position:{x:c(r),y:a(d(o))+(t.offset??0)},data:{label:t.label,width:(u=v.x,b=e.x,Math.abs(b-u)-100),tooltip:t.tooltip},type:y}),n.push({id:x(o,e.id),position:{x:e.x-1,y:d(o)},data:{color:e.color},type:p}),v=e}o++}var u,b;const m=d(o-1)+90-50;var g;for(const c of e){const e=s[c.id].x,t={id:(g=c.id,`actorLine-${g}`),position:{x:e,y:50},data:{height:m,width:2},type:p},r={id:v(c.id),position:{x:e-2,y:50},data:{color:c.color,label:c.label,width:6,height:50},type:p};n.unshift(t,r)}return n}function w(e){const t=[];return JSON.stringify(e,(function(e,n){if(null!=n&&"object"==typeof n){if(t.indexOf(n)>=0)return;t.push(n)}return n}))}const k=e=>{const t=E(e.actors,e.events),n=function(e,t){const n=[];let s=1;for(const[r,i]of t.entries()){const o="steps"in i?i.steps:[i];if(0===o.length)throw new Error(`No steps in sequence: ${JSON.stringify(i)}`);let c=i.from;for(const[a,d]of o.entries()){if(i.from===d.to){const e=t[r-1];if(e){const t="steps"in e?{...e.steps[0],from:e.from}:e;if(t.from===t.to&&t.to===i.from){const e=g({from:f(s-1,d.to,d.to),to:f(s,d.to,d.to),fromHandle:"bottom",toHandle:"top",animated:d.animated});n.push(e);continue}}const o=g({from:x(s,c),to:f(s+1,c,d.to),fromHandle:"right",toHandle:"top",animated:d.animated});n.push(o),s++;continue}{const e=t[r-1];if(e&&0===a){const t="steps"in e?{...e.steps[0],from:e.from}:e;if(t.from===t.to){const e=g({from:f(s-1,t.to,t.to),to:x(s,t.to),fromHandle:"bottom",toHandle:"right",animated:t.animated});s++,n.push(e)}}}const o=x(s,c),l=x(s,d.to),h=f(s,c,d.to),u=e.findIndex((e=>e.id===c)),b=e.findIndex((e=>e.id===d.to))>u,m=g({from:o,to:h,fromHandle:b?"right":"left",toHandle:b?"left":"right",animated:d.animated}),p=g({from:h,to:l,fromHandle:b?"right":"left",toHandle:b?"left":"right",animated:d.animated});n.push(m,p),c=d.to}s++}return n}(e.actors,e.events);e.beforeNodes&&t.unshift(...e.beforeNodes),e.afterNodes&&t.push(...e.afterNodes);const{colorMode:o}=(0,s.G)(),c=(0,i.useMemo)((()=>({[y]:j,[p]:m})),[t,n]);return(0,b.jsx)("div",{style:{height:e.height??"60vh"},children:(0,b.jsxs)(r.Gc,{id:e.id,className:"sequence-diagram",nodes:t,edges:n,colorMode:o,edgesReconnectable:!1,elementsSelectable:!1,nodeTypes:c,minZoom:0,fitView:void 0===e.defaultViewport,defaultViewport:e.defaultViewport,children:[(0,b.jsx)(r.VS,{id:e.id,className:"sequence-diagram__background",variant:r._5.Dots,size:1,bgColor:"dark"===o?"#212121":"#f6f8fa"}),(0,b.jsx)(r.H2,{className:"sequence-diagram__controls",fitViewOptions:{duration:200}})]})})}}}]);